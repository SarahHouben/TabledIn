{"version":3,"sources":["services/api.js","components/DrawerToggleButton.js","components/Toolbar.js","components/SideDrawer.js","components/Backdrop.js","components/Signup.js","components/Login.js","components/TimeForm.js","components/TableRow.js","components/TableForm.js","components/RestaurantForm.js","components/ShowRestaurant.js","components/EditRestaurant.js","components/Modal.js","components/Bookings.js","components/BookingForm.js","components/Planner.js","components/EditPlanner.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","email","axios","post","then","response","data","catch","err","login","logout","delete","DrawerToggleButton","props","className","onClick","click","Toolbar","drawerClickHandler","to","src","alt","user","setUser","handleLogout","SideDrawer","drawerClasses","show","Backdrop","Signup","state","message","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","console","log","history","push","onSubmit","this","placeholder","type","required","onChange","id","Component","Login","TimeForm","openingtimes","convertTime","time","t","toString","length","tEnd","slice","tStart","substr","setOpeningTime","weekday","opentime","closetime","htmlFor","min","max","step","TableRow","cap","num","tablesStage1A","index","tableobject","TableForm","tables","tablesStage1B","tablesStage2A","getTableAmount","n","tableAmount","parseInt","Array","map","e","i","Fragment","key","getData","get","status","error","componentDidMount","table","RestaurantForm","address","phone","weekdays","monday","tuesday","wednesday","thursday","friday","saturday","sunday","tablenumber","initializedTable","valueInt","Number","replace","handleCheckboxChange","currentState","check","checked","tableNumber","newTableState","tablesStage2B","totalTables","str","ShowRestaurant","Object","keys","openingtime","forEach","tableItems","uuidv4","EditRestaurant","put","Modal","onClickParentFunction","onClickFunction","onClose","children","Bookings","showModal","bookings","deleteBooking","res","handleDayClick","bind","selectedDay","undefined","day","defaultYearString","Date","getFullYear","defaultYearMonth","defaultMonthString","getMonth","concat","defaultDayString","getDate","defaultDate","calenderObject","JSON","stringify","selectedDate","splice","join","bookingItems","filter","booking","date","hours","minutes","timeslot","bookingTime","_id","visitorname","visitorcount","visitoremail","visitorphone","bookingID","toDateString","onDayClick","selectedDays","BookingForm","guestnumber","arrivaltime","success","EditPlanner","open","closingtime","changeDate","openString","openingTime","closehours","closeminutes","closeString","closingTime","deleteSchedule","editSchedule","onDateChange","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","backdrop","style","height","exact","path","render","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.061a10a9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst signup = (username, password, email) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, password, email })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };\n","import React from \"react\";\n\n\nconst DrawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n  </button>\n);\n\nexport default DrawerToggleButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../services/api\";\nimport DrawerToggleButton from \"./DrawerToggleButton\";\n\n//Logout function\nconst handleLogout = props => {\n  //logs user out\n  logout().then(() => {\n    //Destroys the session\n    props.setUser(null);\n  });\n};\n\nconst Toolbar = props => {\n  return (\n    <header className=\"toolbar\">\n      <nav className=\"toolbar__navigation\">\n        <div className=\"toolbar__toggle-button\">\n          <DrawerToggleButton click={props.drawerClickHandler} />\n        </div>\n\n        <Link className=\"toolbar__logo\" to=\"/\">\n          <img className=\"nav-logo\" src=\"/logo192.png\" alt=\"TabledIn-Logo\" />{\" \"}\n          TabledIn\n        </Link>\n\n        <div className=\"spacer\" />\n        <div className=\"toolbar__navigation-items\">\n          <ul>\n            {props.user ? (\n              <>\n                <li>\n                  <Link to=\"/planner\">Planner</Link>\n                </li>\n                <li>\n                  <Link to=\"/restaurant/show\">Restaurant Info</Link>\n                </li>\n                <li>\n                  <Link\n                    className=\"nav-link__outer\"\n                    to=\"/\"\n                    onClick={() => handleLogout(props)}\n                  >\n                    Logout\n                  </Link>\n                </li>\n              </>\n            ) : (\n              <>\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n                <li>\n                  <Link className=\"nav-link__outer\" to=\"/login\">\n                    Login\n                  </Link>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../services/api\";\n\n//Logout function\nconst handleLogout = props => {\n  //logs user out\n  logout().then(() => {\n    //Destroys the session\n    props.setUser(null);\n    props.click();\n  });\n};\n\nconst SideDrawer = props => {\n  let drawerClasses = \"side-drawer\";\n  if (props.show) {\n    drawerClasses = \"side-drawer open\";\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        {props.user ? (\n          <>\n            <li>\n              <Link to=\"/planner\" onClick={props.click}>\n                Planner\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/restaurant/show\" onClick={props.click}>\n                Restaurant Info\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" onClick={() => handleLogout(props)}>\n                Logout\n              </Link>\n            </li>\n          </>\n        ) : (\n          <>\n            <li>\n              <Link to=\"/signup\" onClick={props.click}>\n                Signup\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/login\" onClick={props.click}>\n                Login\n              </Link>\n            </li>\n          </>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default SideDrawer;\n","import React from \"react\";\n\nconst Backdrop = props => (\n  <div className=\"backdrop\" onClick={props.click}></div>\n);\n\nexport default Backdrop;\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/api\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password, email } = this.state;\n    console.log(\"THIS STATE:\", username, password, email);\n    signup(username, password, email).then(data => {\n      console.log(\"DATA: \", data);\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        });\n      } else {\n        console.log(data);\n        //successfully signed up\n        // update the state of the parent component\n        this.props.setUser(data);\n        console.log(this.props);\n        //redirect to RESTAURANT SIGNUP/CREATION PAGE\n        this.props.history.push(\"/restaurant/new\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"auth-div__top\">\n          <h1>TabledIn</h1>\n          <p>Manage your reservations.</p>\n          <p>Adapt your opening times.</p>\n          <p>Let customers find you with Google AI.</p>\n        </div>\n        <div className=\"auth-div__bottom\">\n          <h2>Signup</h2>\n          <form className=\"auth-form\" onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"Username\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              required\n              onChange={this.handleChange}\n              id=\"username\"\n            />\n\n            <input\n              placeholder=\"Email\"\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              required\n              onChange={this.handleChange}\n              id=\"email\"\n            />\n\n            <input\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleChange}\n              id=\"password\"\n            />\n\n            {this.state.message && (\n              <p className=\"auth-message\">{this.state.message}</p>\n            )}\n            <button className=\"edit-button\" type=\"submit\">Signup</button>\n          </form>\n          <p>\n            ...or <Link to=\"/login\">log in</Link>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { login } from \"../services/api\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n    // console.log(username, password);\n    login(username, password).then(data => {\n      // console.log(data);\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          password: \"\"\n        });\n      } else {\n        //successfully logged in\n        // update the state of the parent component\n        this.props.setUser(data);\n        console.log(this.props);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"auth-div__top\">\n          <h1>TabledIn</h1>\n          <p>Manage your reservations.</p>\n          <p>Adapt your opening times.</p>\n          <p>Let customers find you with Google AI.</p>\n        </div>\n        <div className=\"auth-div__bottom\">\n          <h2>Login</h2>\n          <form className=\"auth-form\" onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"Username\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              id=\"username\"\n            />\n\n            <input\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              id=\"password\"\n            />\n\n            {this.state.message && (\n              <p className=\"auth-message\">{this.state.message}</p>\n            )}\n            <button className=\"edit-button\" type=\"submit\">Login</button>\n          </form>\n          <p>\n            ...or <Link to=\"/signup\">sign up</Link>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TimeForm extends Component {\n  state = {\n    openingtimes: {}\n  };\n\n  convertTime = time => {\n    let t = time.toString();\n    if (t.length === 3) {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = \"0\" + t.substr(0, 1) + \":\";\n      t = tStart + tEnd;\n    } else {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = t.substr(0, 2) + \":\";\n      t = tStart + tEnd;\n    }\n    return t;\n  };\n\n  componentDidMount() {\n    if (this.props.openingtimes) {\n      this.props.openingtimes.opentime = this.convertTime(\n        this.props.openingtimes.opentime\n      );\n      this.props.openingtimes.closetime = this.convertTime(\n        this.props.openingtimes.closetime\n      );\n\n      this.setState({\n        openingtimes: this.props.openingtimes\n      });\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      openingtimes: { ...this.state.openingtimes, [name]: value }\n    });\n    this.props.setOpeningTime(name, value, this.props.weekday);\n  };\n\n  render() {\n    return (\n      <div   className=\"time-input\">\n        <label htmlFor=\"opentime\">Opens:</label>\n        <input\n      \n          type=\"time\"\n          name=\"opentime\"\n          id=\"opentime\"\n          min=\"08:00\"\n          max=\"23:30\"\n          step=\"900\"\n          required\n          value={this.state.openingtimes.opentime}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"closetime\">Closes:</label>\n        <input\n          type=\"time\"\n          name=\"closetime\"\n          id=\"closetime\"\n          min=\"08:00\"\n          max=\"23:30\"\n          step=\"900\"\n          required\n          value={this.state.openingtimes.closetime}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TableRow extends Component {\n  state = {\n    cap: 0,\n    num: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    //get state with cap, num, index for each table\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        this.props.tablesStage1A(\n          this.state.cap,\n          this.state.num,\n          this.props.index\n        );\n      }\n    );\n  };\n\n  componentDidMount() {\n    // console.log(this.props.tableobject);\n    if (this.props.tableobject) {\n      this.setState(\n        {\n          cap: this.props.tableobject.cap,\n          num: this.props.tableobject.num\n        }\n        // () => console.log(this.state)\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"num\">Table Id: </label>\n        <input\n        className=\"table-list-id\"\n          type=\"text\"\n          name=\"num\"\n          id=\"num\"\n          value={this.state.num}\n          required\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"cap\">Guest number:</label>\n        <input\n        className=\"table-list-number\"\n          type=\"number\"\n          name=\"cap\"\n          id=\"cap\"\n          value={this.state.cap}\n          onChange={this.handleChange}\n          min=\"1\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TableRow from \"./TableRow\";\nimport axios from \"axios\";\n\nexport default class TableForm extends Component {\n  state = {\n    tables: []\n  };\n\n  //pass props to parent (RestaurantForm)\n  tablesStage1B = (cap, num, index) => {\n    this.props.tablesStage2A(cap, num, index);\n  };\n\n  //get amount of tables from RestaurantForm. .\n  getTableAmount = () => {\n    let n = this.props.tableAmount; //n = number of tables\n    n = parseInt(n);\n    if (!n) {\n      n = 0;\n    }\n\n    //Create a TableRow element for each table\n    return [...Array(n)].map((e, i) => {\n      return (\n        <React.Fragment key={i}>\n          <TableRow\n            tablesStage1A={this.tablesStage1B}\n            index={i}\n            tableobject={this.state.tables[i]}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/restaurants\")\n      .then(response => {\n        if (response.data) {\n          this.setState(\n            {\n              tables: response.data.tables\n            }\n            // () => console.log(this.state)\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    // Create list of table forms (list elements = amount of tables)\n    const tables = this.getTableAmount();\n    return (\n      <ul>\n        {tables.map((table, i) => {\n          return <li key={i}>{table}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TimeForm from \"./TimeForm\";\nimport TableForm from \"./TableForm\";\nimport axios from \"axios\";\n\nexport default class RestaurantForm extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    weekdays: {\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      sunday: false\n    },\n    tablenumber: 0,\n    tables: [],\n    openingtimes: {\n      monday: {},\n      tuesday: {},\n      wednesday: {},\n      thursday: {},\n      friday: {},\n      saturday: {},\n      sunday: {}\n    }\n  };\n\n  // get values from text-inputs and update state with them\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        if (name === \"tablenumber\" && this.state.tablenumber) {\n          this.initializedTable(this.state.tablenumber);\n        }\n      }\n    );\n  };\n\n  setOpeningTime = (name, value, weekday) => {\n    //valute that we get from time form is a string and we need it as a number in DB\n    let valueInt = Number(value.replace(\":\", \"\"));\n    this.setState(\n      {\n        openingtimes: {\n          ...this.state.openingtimes,\n          [weekday]: {\n            ...this.state.openingtimes[weekday],\n            [name]: valueInt\n          }\n        }\n      },\n      () => console.log(\"updated state\", this.state)\n    );\n  };\n\n  //get values from checkboxes and update states of weekdays with them\n  handleCheckboxChange = event => {\n    const { weekdays } = { ...this.state };\n    const currentState = weekdays;\n\n    const name = event.target.name;\n    const check = event.target.checked;\n    currentState[name] = check;\n\n    this.setState({ weekdays: currentState });\n  };\n\n  //create array of tables based on table number with default empty states for cap and num\n  initializedTable = tableNumber => {\n    let newTableState = [...Array(Number(tableNumber))].map(table => ({\n      cap: 0,\n      num: \"\"\n    }));\n    this.setState({ tables: newTableState });\n  };\n\n  //update array of tables with cap and num according to their indexes. Update state with tables with correct state.\n  tablesStage2B = (cap, num, index) => {\n    let totalTables = this.state.tables.map((table, i) => {\n      if (index === i) {\n        return {\n          cap,\n          num\n        };\n      } else return table;\n    });\n\n    this.setState(\n      {\n        tables: totalTables\n      },\n      () => {}\n    );\n  };\n\n  //POST results of form to create / update restaurant document\n  handleSubmit = (event, str) => {\n    event.preventDefault();\n\n    const {\n      name,\n      address,\n      phone,\n      email,\n      weekdays,\n      tablenumber,\n      tables,\n      openingtimes\n    } = this.state;\n\n    axios\n      .post(\"/api/restaurants\", {\n        name,\n        address,\n        phone,\n        email,\n        weekdays,\n        tablenumber,\n        tables,\n        openingtimes\n      })\n      .then(data => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className=\"rest-form-header\">Restaurant Information</h2>\n        <form onSubmit={this.handleSubmit} className=\"rest-form-form\">\n          <h3>General information</h3>\n          <div className=\"rest-form-info-div\">\n            <label htmlFor=\"name\">Restaurant name: </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"address\">Address: </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              id=\"address\"\n              required\n              value={this.state.address}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"phone\">Phone number: </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              value={this.state.phone}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <h3>Opening times</h3>\n          <div className=\"rest-form-time-div\">\n            <div>\n              <p>Monday</p>\n              <label htmlFor=\"monday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"monday\"\n                id=\"monday\"\n                checked={this.state.weekdays.monday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.monday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"monday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Tuesday</p>\n              <label htmlFor=\"tuesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"tuesday\"\n                id=\"tuesday\"\n                checked={this.state.weekdays.tuesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.tuesday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"tuesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Wednesday</p>\n              <label htmlFor=\"wednesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"wednesday\"\n                id=\"wednesday\"\n                checked={this.state.weekdays.wednesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.wednesday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"wednesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Thursday</p>\n              <label htmlFor=\"thursday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"thursday\"\n                id=\"thursday\"\n                checked={this.state.weekdays.thursday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.thursday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"thursday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Friday</p>\n              <label htmlFor=\"friday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"friday\"\n                id=\"friday\"\n                checked={this.state.weekdays.friday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.friday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"friday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Saturday</p>\n              <label htmlFor=\"saturday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"saturday\"\n                id=\"saturday\"\n                checked={this.state.weekdays.saturday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.saturday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"saturday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Sunday</p>\n              <label htmlFor=\"sunday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"sunday\"\n                id=\"sunday\"\n                checked={this.state.weekdays.sunday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.sunday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"sunday\"}\n                />\n              )}\n            </div>\n          </div>\n\n          <h3>Seating</h3>\n          <div className=\"rest-form-table-div\">\n            <div className=\"rest-form-table-tnumber\">\n              <label htmlFor=\"tablenumber\">Number of tables: </label>\n              <input\n                type=\"number\"\n                name=\"tablenumber\"\n                id=\"tablenumber\"\n                value={this.state.tablenumber}\n                onChange={this.handleChange}\n                min=\"1\"\n                required\n              />\n            </div>\n            {/* render TableForm with amount of TableRows equal to number of tables */}\n            <TableForm\n              tableAmount={this.state.tablenumber}\n              tablesStage2A={this.tablesStage2B}\n            />\n          </div>\n          <button className=\"edit-button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport uuidv4 from \"uuid/v4\";\n\nexport default class ShowRestaurant extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    weekdays: {\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      sunday: false\n    },\n    tablenumber: 0,\n    tables: [],\n    openingtimes: {\n      monday: {},\n      tuesday: {},\n      wednesday: {},\n      thursday: {},\n      friday: {},\n      saturday: {},\n      sunday: {}\n    }\n  };\n\n  convertTime = time => {\n    let t = time.toString();\n    if (t.length === 3) {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = \"0\" + t.substr(0, 1) + \":\";\n      t = tStart + tEnd;\n    } else {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = t.substr(0, 2) + \":\";\n      t = tStart + tEnd;\n    }\n    return t;\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/restaurants\")\n      .then(response => {\n        if (response) {\n          Object.keys(response.data.openingtime).forEach(key => {\n            response.data.openingtime[key].opentime = this.convertTime(\n              response.data.openingtime[key].opentime\n            );\n            response.data.openingtime[key].closetime = this.convertTime(\n              response.data.openingtime[key].closetime\n            );\n          });\n\n          this.setState({\n            name: response.data.name,\n            address: response.data.address,\n            phone: response.data.phone,\n            email: response.data.email,\n            weekdays: response.data.weekdays,\n            tablenumber: response.data.tablenumber,\n            tables: response.data.tables,\n            openingtimes: response.data.openingtime\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    const tables = this.state.tables;\n    const tableItems = tables.map(table => {\n      const id = uuidv4();\n      return (\n        <tr key={id}>\n          <td>{table.num}</td>\n          <td>{table.cap}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <h2 className=\"rest-form-header\">Information for {this.state.name}</h2>\n\n        <h3 className=\"rest-show-info-h3\">General information</h3>\n        <div className=\"rest-show-info-div\">\n          <p>\n            <strong>Address: </strong>\n            {this.state.address}\n          </p>\n          <p>\n            <strong>Email: </strong>\n            {this.state.email}\n          </p>\n          <p>\n            <strong>Phone: </strong>\n            {this.state.phone}\n          </p>\n        </div>\n\n        <h3 className=\"rest-show-info-h3\">Opening times</h3>\n        <ul className=\"rest-show-info-ul\">\n          <li>\n            <strong>Monday:</strong>\n            {this.state.weekdays.monday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.monday && (\n            <p>Opens: {this.state.openingtimes.monday.opentime}</p>\n          )}\n          {this.state.weekdays.monday && (\n            <p>Closes: {this.state.openingtimes.monday.closetime}</p>\n          )}\n\n          <li>\n            <strong>Tuesday</strong>\n            {this.state.weekdays.tuesday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.tuesday && (\n            <p>Opens: {this.state.openingtimes.tuesday.opentime}</p>\n          )}\n          {this.state.weekdays.tuesday && (\n            <p>Closes: {this.state.openingtimes.tuesday.closetime}</p>\n          )}\n\n          <li>\n            <strong>Wednesday</strong>\n            {this.state.weekdays.wednesday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.wednesday && (\n            <p>Opens: {this.state.openingtimes.wednesday.opentime}</p>\n          )}\n          {this.state.weekdays.wednesday && (\n            <p>Closes: {this.state.openingtimes.wednesday.closetime}</p>\n          )}\n\n          <li>\n            <strong>Thursday</strong>\n            {this.state.weekdays.thursday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.thursday && (\n            <p>Opens: {this.state.openingtimes.thursday.opentime}</p>\n          )}\n          {this.state.weekdays.thursday && (\n            <p>Closes: {this.state.openingtimes.thursday.closetime}</p>\n          )}\n\n          <li>\n            <strong>Friday</strong>\n            {this.state.weekdays.friday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.friday && (\n            <p>Opens: {this.state.openingtimes.friday.opentime}</p>\n          )}\n          {this.state.weekdays.friday && (\n            <p>Closes: {this.state.openingtimes.friday.closetime}</p>\n          )}\n\n          <li>\n            <strong>Saturday</strong>\n            {this.state.weekdays.saturday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.saturday && (\n            <p>Opens: {this.state.openingtimes.saturday.opentime}</p>\n          )}\n          {this.state.weekdays.saturday && (\n            <p>Closes: {this.state.openingtimes.saturday.closetime}</p>\n          )}\n\n          <li>\n            <strong>Sunday</strong>\n            {this.state.weekdays.sunday ? <p>Open</p> : <p>Closed</p>}\n          </li>\n          {this.state.weekdays.sunday && (\n            <p>Opens: {this.state.openingtimes.sunday.opentime}</p>\n          )}\n          {this.state.weekdays.sunday && (\n            <p>Closes: {this.state.openingtimes.sunday.closetime}</p>\n          )}\n        </ul>\n\n        <h3 className=\"rest-show-info-h3\">Seating</h3>\n        <p>Number of tables: {this.state.tablenumber}</p>\n        <table>\n          <thead>\n            <tr>\n              <th>Table Id</th>\n              <th>Guest number</th>\n            </tr>\n          </thead>\n          <tbody>{tableItems}</tbody>\n        </table>\n\n        <Link to=\"/restaurant/edit\">\n          <button className=\"edit-button\">Edit Info</button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TimeForm from \"./TimeForm\";\nimport TableForm from \"./TableForm\";\nimport axios from \"axios\";\n\nexport default class EditRestaurant extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    weekdays: {\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      sunday: false\n    },\n    tablenumber: 0,\n    tables: [],\n    openingtimes: {\n      monday: {},\n      tuesday: {},\n      wednesday: {},\n      thursday: {},\n      friday: {},\n      saturday: {},\n      sunday: {}\n    }\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/restaurants\")\n      .then(response => {\n        // console.log(response);\n        this.setState({\n          name: response.data.name,\n          address: response.data.address,\n          phone: response.data.phone,\n          email: response.data.email,\n          weekdays: response.data.weekdays,\n          tablenumber: response.data.tablenumber,\n          tables: response.data.tables,\n          openingtimes: response.data.openingtime\n        });\n      })\n      .catch(err => {\n        console.log(err.response);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        if (name === \"tablenumber\" && this.state.tablenumber) {\n          this.initializedTable(this.state.tablenumber);\n        }\n      }\n    );\n  };\n\n  setOpeningTime = (name, value, weekday) => {\n    //valute that we get from time form is a string and we need it as a number in DB\n    let valueInt = Number(value.replace(\":\", \"\"));\n    this.setState(\n      {\n        openingtimes: {\n          ...this.state.openingtimes,\n          [weekday]: {\n            ...this.state.openingtimes[weekday],\n            [name]: valueInt\n          }\n        }\n      },\n      () => console.log(\"updated state\", this.state)\n    );\n  };\n\n  //get values from checkboxes and update states of weekdays with them\n  handleCheckboxChange = event => {\n    const { weekdays } = { ...this.state };\n    const currentState = weekdays;\n\n    const name = event.target.name;\n    const check = event.target.checked;\n    currentState[name] = check;\n\n    this.setState({ weekdays: currentState });\n  };\n\n  //create array of tables based on table number with default empty states for cap and num\n  initializedTable = tableNumber => {\n    let newTableState = [...Array(Number(tableNumber))].map(table => ({\n      cap: 0,\n      num: \"\"\n    }));\n    this.setState({ tables: newTableState });\n  };\n\n  //update array of tables with cap and num according to their indexes. Update state with tables with correct state.\n  tablesStage2B = (cap, num, index) => {\n    let totalTables = this.state.tables.map((table, i) => {\n      if (index === i) {\n        return {\n          cap,\n          num\n        };\n      } else return table;\n    });\n\n    this.setState(\n      {\n        tables: totalTables\n      },\n      () => {}\n    );\n  };\n\n  handleSubmit = (event, str) => {\n    event.preventDefault();\n\n    const {\n      name,\n      address,\n      phone,\n      email,\n      weekdays,\n      tablenumber,\n      tables,\n      openingtimes\n    } = this.state;\n\n    axios\n      .put(\"/api/restaurants\", {\n        name,\n        address,\n        phone,\n        email,\n        weekdays,\n        tablenumber,\n        tables,\n        openingtimes\n      })\n      .then(data => {\n        this.props.history.push(\"/restaurant/show\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className=\"rest-form-header\">\n          Update Information for {this.state.name}\n        </h2>\n\n        <form onSubmit={this.handleSubmit} className=\"rest-form-form\">\n          <h3>General information: </h3>\n          <div className=\"rest-form-info-div\">\n            <label htmlFor=\"address\">Address: </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              id=\"address\"\n              value={this.state.address}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"phone\">Phone number: </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              value={this.state.phone}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <h3>Opening times: </h3>\n          <div className=\"rest-form-time-div\">\n            <div>\n              <p>Monday</p>\n              <label htmlFor=\"monday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"monday\"\n                id=\"monday\"\n                checked={this.state.weekdays.monday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.monday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.monday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"monday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Tuesday</p>\n              <label htmlFor=\"tuesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"tuesday\"\n                id=\"tuesday\"\n                checked={this.state.weekdays.tuesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.tuesday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.tuesday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"tuesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Wednesday</p>\n              <label htmlFor=\"wednesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"wednesday\"\n                id=\"wednesday\"\n                checked={this.state.weekdays.wednesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.wednesday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.wednesday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"wednesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Thursday</p>\n              <label htmlFor=\"thursday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"thursday\"\n                id=\"thursday\"\n                checked={this.state.weekdays.thursday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.thursday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.thursday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"thursday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Friday</p>\n              <label htmlFor=\"friday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"friday\"\n                id=\"friday\"\n                checked={this.state.weekdays.friday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.friday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.friday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"friday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Saturday</p>\n              <label htmlFor=\"saturday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"saturday\"\n                id=\"saturday\"\n                checked={this.state.weekdays.saturday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.saturday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.saturday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"saturday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Sunday</p>\n              <label htmlFor=\"sunday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"sunday\"\n                id=\"sunday\"\n                checked={this.state.weekdays.sunday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.sunday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.sunday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"sunday\"}\n                />\n              )}\n            </div>\n          </div>\n\n          <h3>Seating information: </h3>\n          <div className=\"rest-form-table-div\">\n            <div className=\"rest-form-table-tnumber\">\n              <label htmlFor=\"tablenumber\">Number of tables: </label>\n              <input\n                type=\"number\"\n                name=\"tablenumber\"\n                id=\"tablenumber\"\n                value={this.state.tablenumber}\n                onChange={this.handleChange}\n                min=\"0\"\n              />\n            </div>\n            {/* render TableForm with amount of TableRows equal to number of tables */}\n            <TableForm\n              tables={this.state.tables}\n              tableAmount={this.state.tablenumber}\n              tablesStage2A={this.tablesStage2B}\n            />\n          </div>\n          <button className=\"edit-button\" type=\"submit\">Submit</button>\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Modal extends Component {\n  onClickParentFunction = () => {\n    this.props.onClickFunction();\n  };\n\n  onClose = () => {\n    this.props.onClose && this.props.onClose();\n  };\n\n  render() {\n    //toggle Modal state\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div className=\"modal-background\">\n        <div className=\"modal\" id=\"modal\">\n          <h3>Confirmation required</h3>\n          <div className=\"modal-content\">{this.props.children}</div>\n          <div className=\"actions\">\n            <button\n              className=\"delete-button\"\n              onClick={(this.onClose, this.onClickParentFunction)}\n            >\n              Yes, delete\n            </button>\n            <button className=\"cancel-button\" onClick={this.onClose}>\n              No, cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport Modal from \"./Modal\";\nimport axios from \"axios\";\n\nexport default class Bookings extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      bookings: [],\n      show: false\n    };\n  }\n\n  //function to toggle modal\n  showModal = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  // Function for datepicker\n  handleDayClick(day) {\n    this.setState({ selectedDay: day });\n  }\n\n  //get all bookings\n  getData = () => {\n    axios\n      .get(\"/api/bookings\")\n      .then(response => {\n        this.setState({\n          bookings: response.data\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  //delete selected booking\n  deleteBooking = id => {\n    axios.delete(`/api/bookings/${id}`).then(res => {\n      this.getData();\n    });\n  };\n\n  render() {\n    //get default Date\n    let defaultYear = new Date().getFullYear();\n    let defaultYearString = defaultYear.toString();\n    let defaultYearMonth = \"\";\n\n    let defaultMonth = new Date().getMonth() + 1; //plus one as getMonth starts with index 0\n    let defaultMonthString = defaultMonth.toString();\n    if (defaultMonthString.length === 1) {\n      defaultYearMonth = defaultYearString.concat(\"-0\", defaultMonthString);\n    } else {\n      defaultYearMonth = defaultYearString.concat(\"-\", defaultMonthString);\n    }\n\n    let defaultDay = new Date().getDate();\n    let defaultDayString = defaultDay.toString();\n    let defaultDate = \"\";\n\n    if (defaultDayString.length === 1) {\n      defaultDate = defaultYearMonth.concat(\"-0\", defaultDayString);\n    } else {\n      defaultDate = defaultYearMonth.concat(\"-\", defaultDayString);\n    }\n\n    //get date selected in calender\n    let calenderString = \"\";\n    const calenderObject = JSON.stringify(this.state.selectedDay) || null;\n    if (calenderObject !== null) {\n      calenderString = [...calenderObject].splice(1, 10).join(\"\");\n    } else {\n      calenderString = null;\n    }\n\n    //set selected Date to have the default value of the current date. On picking a date in the calender, date changes to the calender date\n    const selectedDate = calenderString || defaultDate;\n\n    //filter Bookings and only return bookings with the correct date\n    const filteredBookings = this.state.bookings.filter(booking => {\n      let bookingDate = [...booking.date].splice(0, 10).join(\"\");\n      let dateMatched = bookingDate === selectedDate;\n      return dateMatched;\n    });\n\n    const bookingItems = filteredBookings.map(booking => {\n      //format time for displaying\n      let hours = \"\";\n      let minutes = \"\";\n      if (booking.timeslot.length === 3) {\n        hours = \"0\" + booking.timeslot.slice(0, 1);\n        minutes = booking.timeslot.slice(1);\n      }\n      if (booking.timeslot.length === 4) {\n        hours = booking.timeslot.slice(0, 2);\n        minutes = booking.timeslot.slice(2);\n      }\n\n      let bookingTime = hours + \":\" + minutes;\n\n      return (\n        <ul key={booking._id}>\n          <li>\n            <section>\n              <div>\n                <p>Date: {[...booking.date].splice(0, 10).join(\"\")}</p>\n                <p>Time: {bookingTime}</p>\n                <p>Table: {booking.tablenumber}</p>\n              </div>\n              <div>\n                <p>\n                  Guest: {booking.visitorname} Amount: {booking.visitorcount}\n                </p>\n                {booking.visitoremail && <p>Email: {booking.visitoremail} </p>}\n                {booking.visitorphone && <p>Phone: {booking.visitorphone} </p>}\n              </div>\n\n              <div>\n                <button\n                  className=\"delete-button\"\n                  onClick={e => {\n                    this.showModal();\n                  }}\n                >\n                  {\" \"}\n                  Delete{\" \"}\n                </button>\n              </div>\n            </section>\n          </li>\n          <Modal\n            onClose={this.showModal}\n            show={this.state.show}\n            deleteBooking={this.deleteBooking}\n            bookingID={booking._id}\n            onClickFunction={() => {\n              this.deleteBooking(booking._id);\n            }}\n          >\n            Are you sure you wish to delete this booking?\n          </Modal>\n        </ul>\n      );\n    });\n\n    return (\n      <div>\n        {/* <h3>Your bookings</h3> */}\n        <h2 className=\"rest-form-header\">Your Bookings</h2>\n\n        <div>\n          {this.state.selectedDay ? (\n            <p>Bookings for: {this.state.selectedDay.toDateString()}</p>\n          ) : (\n            <p>Please select a day.</p>\n          )}\n          <DayPicker\n            onDayClick={this.handleDayClick}\n            selectedDays={this.state.selectedDay}\n          />\n        </div>\n\n        <div>\n          {bookingItems && bookingItems.length ? (\n            bookingItems\n          ) : (\n            <p>No bookings for this date</p>\n          )}\n        </div>\n\n        <Link to=\"/booking/add\">\n          <button className=\"edit-button\">Add booking</button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport axios from \"axios\";\n\nexport default class BookingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      guestnumber: 0,\n      arrivaltime: \"\",\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      message: \"\",\n      success: \"\"\n    };\n  }\n\n  // Function for datepicker\n  handleDayClick(day) {\n    this.setState({ selectedDay: day });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n    console.log({\n      [name]: value\n    });\n  };\n\n  //Handle Submit with message functionality\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let success = \"Created booking.\";\n\n    axios\n      .post(\"/api/bookings\", {\n        selectedDay: this.state.selectedDay,\n        guestnumber: this.state.guestnumber,\n        arrivaltime: this.state.arrivaltime,\n        name: this.state.name,\n        phone: this.state.phone,\n        email: this.state.email\n      })\n      .then(data => {\n        if (data.data.message) {\n          this.setState({\n            message: data.data.message,\n            success: \"\"\n          });\n        } else if (!data.data.message) {\n          this.setState({\n            success: success,\n            message: \"\",\n            selectedDay: undefined,\n            guestnumber: 0,\n            arrivaltime: \"\",\n            name: \"\",\n            phone: \"\",\n            email: \"\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n \n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"rest-form-header\">Add a Booking</h2>\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Booking Details</h3>\n\n          <div>\n            {this.state.selectedDay ? (\n              <p>Date of booking: {this.state.selectedDay.toDateString()}</p>\n            ) : (\n              <p>Please select a day.</p>\n            )}\n            <DayPicker\n              onDayClick={this.handleDayClick}\n              selectedDays={this.state.selectedDay}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"guestnumber\">Number of guests: </label>\n            <input\n              type=\"number\"\n              name=\"guestnumber\"\n              id=\"guestnumber\"\n              value={this.state.guestnumber}\n              onChange={this.handleChange}\n              min=\"1\"\n            />\n            <label htmlFor=\"arrivaltime\">Time: </label>\n            <input\n              type=\"time\"\n              name=\"arrivaltime\"\n              id=\"arrivaltime\"\n              min=\"08:00\"\n              max=\"23:30\"\n              step=\"900\"\n              required\n              value={this.state.arrivaltime}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <h3>Guest Details</h3>\n          <div>\n            <label htmlFor=\"name\">Name: </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"phone\">Phone number: </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              value={this.state.phone}\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n          {this.state.message && (\n            <p className=\"auth-message\">{this.state.message}</p>\n          )}\n          {this.state.success && (\n            <p>\n              {this.state.success} <Link to=\"/\">Back to home.</Link>\n            </p>\n          )}\n\n          <button className=\"edit-button\" type=\"Submit\">\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport Modal from \"./Modal\";\nimport axios from \"axios\";\n\nexport default class EditPlanner extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    //this.editSchedule = this.editSchedule.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      open: false,\n      message: \"\",\n      openingtime: \"\",\n      closingtime: \"\",\n      _id: \"\",\n      show: false\n    };\n  }\n\n  //function to toggle modal\n  showModal = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  //deletes old schedule so that new schedule can be created for that day\n  // editSchedule() {\n  //   // console.log(this.state.selectedDay)\n  //   axios\n  //     .delete(\"/api/planner\", { data: { selectedDay: this.state.selectedDay } })\n  //     .then(res => {\n  //       // console.log('fired' res)\n  //       this.props.history.push(\"/planner/edit\");\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // }\n\n  // Function for datepicker\n  handleDayClick(day) {\n    this.props.changeDate(day);\n    // console.log(this.state.selectedDay)\n    axios\n      .post(\"/api/planner\", {\n        selectedDay: day\n      })\n      .then(response => {\n        // console.log(response);\n        if (response.data.message) {\n          this.setState({\n            message: response.data.message,\n            open: false,\n            openingtime: \"\",\n            closingtime: \"\",\n            _id: \"\"\n          });\n        } else {\n          this.setState({\n            open: response.data.open,\n            openingtime: response.data.openingtime,\n            closingtime: response.data.closingtime,\n            _id: response.data._id,\n            message: \"\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    //format openingtime for displaying\n    let hours = \"\";\n    let minutes = \"\";\n    let openString = this.state.openingtime.toString();\n\n    if (openString.length === 3) {\n      hours = \"0\" + openString.slice(0, 1);\n      minutes = openString.slice(1);\n    }\n    if (openString.length === 4) {\n      hours = openString.slice(0, 2);\n      minutes = openString.slice(2);\n    }\n\n    let openingTime = hours + \":\" + minutes;\n\n    //format closingtime for displaying\n    let closehours = \"\";\n    let closeminutes = \"\";\n    let closeString = this.state.closingtime.toString();\n\n    if (closeString.length === 3) {\n      closehours = closeString.slice(0, 1);\n      closeminutes = closeString.slice(1);\n    }\n    if (closeString.length === 4) {\n      closehours = closeString.slice(0, 2);\n      closeminutes = closeString.slice(2);\n    }\n\n    let closingTime = closehours + \":\" + closeminutes;\n\n    return (\n      <React.Fragment>\n        <h2 className=\"rest-form-header\">Search for Schedule</h2>\n\n        <div>\n          {this.props.selectedDay ? (\n            <p>Schedule for: {this.props.selectedDay.toDateString()}</p>\n          ) : (\n            <p>Please select a day.</p>\n          )}\n          <DayPicker\n            onDayClick={this.handleDayClick}\n            selectedDays={this.props.selectedDay}\n          />\n        </div>\n\n        {this.state._id ? (\n          <div>\n            {this.state.open ? <p>Open</p> : <p>Closed</p>}\n            {this.state.open && <p>Opening time: {openingTime}</p>}\n            {this.state.open && <p>Closing time: {closingTime}</p>}\n          </div>\n        ) : (\n          <p>No schedule found.</p>\n        )}\n\n        {this.state._id ? (\n          <div>\n            <button\n              className=\"edit-button\"\n              // onClick={this.editSchedule}\n              onClick={e => {\n                this.showModal();\n              }}\n            >\n              Change schedule\n            </button>\n\n            <Modal\n              onClose={this.showModal}\n              show={this.state.show}\n              deleteSchedule={this.editSchedule}\n              onClickFunction={() => {\n                this.props.editSchedule(this.props);\n              }}\n            >\n              Changing the schedule will delete all previous bookings for this\n              date. Proceed?\n            </Modal>\n          </div>\n        ) : (\n          <Link to=\"/planner/edit\">\n            <button className=\"edit-button\">Add schedule</button>\n          </Link>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport axios from \"axios\";\nexport default class EditPlanner extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      open: false,\n      opentime: \"\",\n      closetime: \"\",\n      success: \"\"\n    };\n  }\n  //get values from text inputs and update state of weekday, opentime, closetime\n  handleDayClick(day) {\n    this.props.changeDate(day);\n    this.setState({ success: \"\" });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  //get values from checkbox and update state of \"open\"\n  handleCheckboxChange = event => {\n    this.setState({ open: !this.state.open });\n  };\n\n  //Function to be called when submitting the form\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state);\n    console.log(\"PROPS SELECTED DAY: \", this.props.selectedDay);\n    let success = \"Created schedule.\";\n\n    axios\n      .post(\"/api/planner/edit\", {\n        selectedDay: this.props.selectedDay,\n        open: this.state.open,\n        opentime: this.state.opentime,\n        closetime: this.state.closetime\n      })\n      .then(res => {\n        if (res.data.message) {\n          this.setState({\n            message: res.data.message,\n            success: \"\"\n          });\n        } else if (!res.data.message) {\n          this.setState({\n            success: success,\n            message: \"\",\n            selectedDay: undefined,\n            open: false,\n            opentime: \"\",\n            closetime: \"\"\n          });\n        }\n        this.props.onDateChange();\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <React.Fragment>\n        <h2 className=\"rest-form-header\">Add new Schedule</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            {this.props.selectedDay ? (\n              <p>Schedule for: {this.props.selectedDay.toDateString()}</p>\n            ) : (\n              <p>Please select a day.</p>\n            )}\n            <DayPicker\n              onDayClick={this.handleDayClick}\n              selectedDays={this.props.selectedDay}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"open\">Open? </label>\n            <input\n              type=\"checkbox\"\n              name=\"open\"\n              id=\"open\"\n              checked={this.state.open}\n              onChange={this.handleCheckboxChange}\n            />\n\n            <label htmlFor=\"open\">Closed? </label>\n            <input\n              type=\"checkbox\"\n              name=\"open\"\n              id=\"open\"\n              checked={!this.state.open}\n              onChange={this.handleCheckboxChange}\n            />\n          </div>\n\n          {this.state.open && (\n            <div>\n              <label htmlFor=\"opentime\">Opening time: </label>\n              <input\n                type=\"time\"\n                name=\"opentime\"\n                id=\"opentime\"\n                min=\"08:00\"\n                max=\"23:30\"\n                step=\"900\"\n                required\n                value={this.state.opentime}\n                onChange={this.handleChange}\n              />\n              <label htmlFor=\"closetime\">Closing time: </label>\n              <input\n                type=\"time\"\n                name=\"closetime\"\n                id=\"closetime\"\n                min=\"08:00\"\n                max=\"23:30\"\n                step=\"900\"\n                required\n                value={this.state.closetime}\n                onChange={this.handleChange}\n              />\n            </div>\n          )}\n          {this.state.message && (\n            <p className=\"auth-message\">{this.state.message}</p>\n          )}\n          {this.state.success && (\n            <p>\n              {this.state.success} <Link to=\"/planner\">Back to Planner.</Link>\n            </p>\n          )}\n\n          <button className=\"edit-button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Toolbar from \"./components/Toolbar\";\nimport SideDrawer from \"./components/SideDrawer\";\nimport Backdrop from \"./components/Backdrop\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport RestaurantForm from \"./components/RestaurantForm\";\nimport ShowRestaurant from \"./components/ShowRestaurant\";\nimport EditRestaurant from \"./components/EditRestaurant\";\nimport Bookings from \"./components/Bookings\";\nimport BookingForm from \"./components/BookingForm\";\nimport Planner from \"./components/Planner\";\nimport EditPlanner from \"./components/EditPlanner\";\nimport axios from \"axios\";\n\nimport \"./scss/App.scss\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    sideDrawerOpen: false,\n    selectedDay: undefined\n  };\n\n  changeDate = data => {\n    this.setState({\n      selectedDay: data\n    });\n  };\n\n  editSchedule = (props) => {\n    // console.log(this.state.selectedDay)\n    axios\n      .delete(\"/api/planner\", { data: { selectedDay: this.state.selectedDay } })\n      .then(res => {\n        // console.log('fired' res)\n        props.history.push(\"/planner/edit\");\n        // this.props.history.push(\"/planner/edit\");\n        //<Redirect to=\"/planner/edit\" />;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //set date to undefined\n  onChange = () => {\n    this.setState({\n      selectedDay: undefined\n    });\n  } \n\n  drawerToggleClickHandler = () => {\n    this.setState(prevState => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen };\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  render() {\n    let backdrop;\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />;\n    }\n\n    return (\n      <div className=\"App\" style={{ height: \"100%\" }}>\n        <Toolbar\n          drawerClickHandler={this.drawerToggleClickHandler}\n          user={this.state.user}\n          setUser={this.setUser}\n        />\n        <SideDrawer\n          click={this.backdropClickHandler}\n          show={this.state.sideDrawerOpen}\n          user={this.state.user}\n          setUser={this.setUser}\n        />\n        {backdrop}\n\n        <main>\n          <Switch>\n            <Route\n              exact\n              path=\"/signup\"\n              render={props => (\n                //spread props object so that all properties of props are passed on\n                <Signup setUser={this.setUser} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props => <Login setUser={this.setUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/restaurant/new\"\n              render={props => {\n                if (this.state.user) return <RestaurantForm {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={props => {\n                if (this.state.user) return <Bookings {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/booking/add\"\n              render={props => {\n                if (this.state.user) return <BookingForm {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/restaurant/edit\"\n              render={props => {\n                if (this.state.user) return <EditRestaurant {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/restaurant/show\"\n              render={props => {\n                if (this.state.user) return <ShowRestaurant {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/planner\"\n              render={props => {\n                if (this.state.user)\n                  return (\n                    <Planner\n                      {...props}\n                      changeDate={this.changeDate}\n                      selectedDay={this.state.selectedDay}\n                      editSchedule={this.editSchedule}\n                    />\n                  );\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/planner/edit\"\n              render={props => {\n                if (this.state.user)\n                  return (\n                    <EditPlanner\n                      {...props}\n                      changeDate={this.changeDate}\n                      selectedDay={this.state.selectedDay}\n                      editSchedule={this.editSchedule}\n                      onDateChange={this.onChange}\n                    />\n                  );\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}