{"version":3,"sources":["services/api.js","components/DrawerToggleButton.js","components/Toolbar.js","components/SideDrawer.js","components/Backdrop.js","components/Signup.js","components/Login.js","components/TimeForm.js","components/TableRow.js","components/TableForm.js","components/RestaurantForm.js","components/ShowRestaurant.js","components/EditRestaurant.js","components/Modal.js","components/Bookings.js","components/BookingForm.js","components/Planner.js","components/EditPlanner.js","components/About.js","components/Privacy.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","email","axios","post","then","response","data","catch","err","login","logout","delete","DrawerToggleButton","props","className","onClick","click","Toolbar","drawerClickHandler","to","src","alt","user","activeClassName","setUser","handleLogout","SideDrawer","drawerClasses","show","Backdrop","Signup","state","message","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","history","push","onSubmit","this","placeholder","type","required","onChange","id","Component","Login","TimeForm","openingtimes","convertTime","time","t","toString","length","tEnd","slice","tStart","substr","setOpeningTime","weekday","opentime","closetime","htmlFor","min","max","step","TableRow","cap","num","tablesStage1A","index","tableobject","TableForm","tables","tablesStage1B","tablesStage2A","getTableAmount","n","tableAmount","parseInt","Array","map","e","i","Fragment","key","getData","get","console","log","status","error","componentDidMount","table","RestaurantForm","address","phone","googleassistant","phonegateway","menu","logo","weekdays","monday","tuesday","wednesday","thursday","friday","saturday","sunday","tablenumber","fileChangedHandlerMenu","menuFile","files","uploadData","FormData","append","secure_url","fileChangedHandlerLogo","logoFile","initializedTable","valueInt","Number","replace","handleCheckboxChange","currentState","check","checked","handleOptinCheckboxChange","tableNumber","newTableState","tablesStage2B","totalTables","str","ShowRestaurant","Object","keys","openingtime","forEach","tableItems","uuidv4","href","download","rel","EditRestaurant","put","Modal","onClickParentFunction","onClickFunction","onClose","children","Bookings","showModal","booking","bookings","item","j","_id","bookingsData","el","deleteBooking","res","handleDayClick","bind","selectedDay","undefined","day","defaultYearString","Date","getFullYear","defaultYearMonth","defaultMonthString","getMonth","concat","defaultDayString","getDate","defaultDate","calenderObject","JSON","stringify","selectedDate","splice","join","bookingItems","filter","date","hours","minutes","timeslot","bookingTime","visitorname","visitorcount","webapp","dialogflow","visitorphone","visitoremail","toDateString","onDayClick","selectedDays","BookingForm","guestnumber","arrivaltime","success","EditPlanner","open","closingtime","changeDate","openString","openingTime","closehours","closeminutes","closeString","closingTime","deleteSchedule","editSchedule","onDateChange","About","Privacy","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","backdrop","style","height","exact","path","render","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7266b40a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst signup = (username, password, email) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, password, email })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };\n","import React from \"react\";\n\n\nconst DrawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n  </button>\n);\n\nexport default DrawerToggleButton;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { logout } from \"../services/api\";\nimport DrawerToggleButton from \"./DrawerToggleButton\";\n\n//Logout function\nconst handleLogout = props => {\n  //logs user out\n  logout().then(() => {\n    //Destroys the session\n    props.setUser(null);\n  });\n};\n\nconst Toolbar = props => {\n  return (\n    <header className=\"toolbar\">\n      <nav className=\"toolbar__navigation\">\n        <div className=\"toolbar__toggle-button\">\n          <DrawerToggleButton click={props.drawerClickHandler} />\n        </div>\n\n        <NavLink className=\"toolbar__logo\" to=\"/\">\n          <img className=\"nav-logo\" src=\"/logo192.png\" alt=\"TabledIn-Logo\" />{\" \"}\n          TabledIn\n        </NavLink>\n\n        <div className=\"spacer\" />\n        <div className=\"toolbar__navigation-items\">\n          <ul>\n            {props.user ? (\n              <>\n                <li>\n                  <NavLink\n                    className=\"navlink-style\"\n                    activeClassName=\"navlink-active\"\n                    to=\"/booking/add\"\n                  >\n                    Add Booking\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className=\"navlink-style\"\n                    activeClassName=\"navlink-active\"\n                    to=\"/planner\"\n                  >\n                    Planner\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className=\"navlink-style\"\n                    activeClassName=\"navlink-active\"\n                    to=\"/restaurant/show\"\n                  >\n                    Restaurant Info\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className=\"nav-link__outer-logout\"\n                    to=\"/\"\n                    onClick={() => handleLogout(props)}\n                  >\n                    Logout\n                  </NavLink>\n                </li>\n              </>\n            ) : (\n              <>\n                <li>\n                  <NavLink\n                    className=\"navlink-style\"\n                    activeClassName=\"navlink-active\"\n                    to=\"/about\"\n                  >\n                    About\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className=\"navlink-style\"\n                    activeClassName=\"navlink-active\"\n                    to=\"/privacy\"\n                  >\n                    Privacy Policy\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className=\"navlink-style\"\n                    activeClassName=\"navlink-active\"\n                    to=\"/signup\"\n                  >\n                    Signup\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    activeClassName=\"navlink-active\"\n                    className=\"nav-link__outer navlink-style\"\n                    to=\"/login\"\n                  >\n                    Login\n                  </NavLink>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { logout } from \"../services/api\";\n\n//Logout function\nconst handleLogout = props => {\n  //logs user out\n  logout().then(() => {\n    //Destroys the session\n    props.setUser(null);\n    props.click();\n  });\n};\n\nconst SideDrawer = props => {\n  let drawerClasses = \"side-drawer\";\n  if (props.show) {\n    drawerClasses = \"side-drawer open\";\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        {props.user ? (\n          <>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                to=\"/booking/add\"\n                onClick={props.click}\n              >\n                Add Booking\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                to=\"/planner\"\n                onClick={props.click}\n              >\n                Planner\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                to=\"/restaurant/show\"\n                onClick={props.click}\n              >\n                Restaurant Info\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                to=\"/\"\n                onClick={() => handleLogout(props)}\n              >\n                Logout\n              </NavLink>\n            </li>\n          </>\n        ) : (\n          <>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                onClick={props.click}\n                to=\"/about\"\n              >\n                About\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                to=\"/signup\"\n                onClick={props.click}\n              >\n                Signup\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                to=\"/login\"\n                onClick={props.click}\n              >\n                Login\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                className=\"side-drawer-navlink\"\n                activeClassName=\"side-drawer-navlink-active\"\n                onClick={props.click}\n                to=\"/privacy\"\n              >\n                Privacy Policy\n              </NavLink>\n            </li>\n          </>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default SideDrawer;\n","import React from \"react\";\n\nconst Backdrop = props => (\n  <div className=\"backdrop\" onClick={props.click}></div>\n);\n\nexport default Backdrop;\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/api\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password, email } = this.state;\n    // console.log(\"THIS STATE:\", username, password, email);\n    signup(username, password, email).then(data => {\n      // console.log(\"DATA: \", data);\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        });\n      } else {\n        // console.log(data);\n        //successfully signed up\n        // update the state of the parent component\n        this.props.setUser(data);\n        // console.log(this.props);\n        //redirect to RESTAURANT SIGNUP/CREATION PAGE\n        this.props.history.push(\"/restaurant/new\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"auth-div__top\">\n          <h1>TabledIn</h1>\n          <p>Manage your reservations.</p>\n          <p>Adapt your opening times.</p>\n          <p>Let customers find you with Google AI.</p>\n        </div>\n        <div className=\"auth-div__bottom\">\n          <h2>Signup</h2>\n          <form className=\"auth-form\" onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"Username\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              required\n              onChange={this.handleChange}\n              id=\"username\"\n            />\n\n            <input\n              placeholder=\"Email\"\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              required\n              onChange={this.handleChange}\n              id=\"email\"\n            />\n\n            <input\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleChange}\n              id=\"password\"\n            />\n\n            {this.state.message && (\n              <p className=\"auth-message\">{this.state.message}</p>\n            )}\n            <button className=\"edit-button\" type=\"submit\">Signup</button>\n          </form>\n          <p>\n            ...or <Link to=\"/login\">log in</Link>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { login } from \"../services/api\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n    login(username, password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          password: \"\"\n        });\n      } else {\n        //successfully logged in\n        // update the state of the parent component\n        this.props.setUser(data);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"auth-div__top\">\n          <h1>TabledIn</h1>\n          <p>Manage your reservations.</p>\n          <p>Adapt your opening times.</p>\n          <p>Let customers find you with Google AI.</p>\n        </div>\n        <div className=\"auth-div__bottom\">\n          <h2>Login</h2>\n          <form className=\"auth-form\" onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"Username\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              id=\"username\"\n            />\n\n            <input\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              id=\"password\"\n            />\n\n            {this.state.message && (\n              <p className=\"auth-message\">{this.state.message}</p>\n            )}\n            <button className=\"edit-button\" type=\"submit\">Login</button>\n          </form>\n          <p>\n            ...or <Link to=\"/signup\">sign up</Link>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TimeForm extends Component {\n  state = {\n    openingtimes: {}\n  };\n\n  convertTime = time => {\n    let t = time.toString();\n    if (t.length === 3) {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = \"0\" + t.substr(0, 1) + \":\";\n      t = tStart + tEnd;\n    } else {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = t.substr(0, 2) + \":\";\n      t = tStart + tEnd;\n    }\n    return t;\n  };\n\n  componentDidMount() {\n    if (this.props.openingtimes) {\n\n      this.setState({\n        openingtimes: {\n          opentime: this.convertTime(this.props.openingtimes.opentime),\n          closetime: this.convertTime(this.props.openingtimes.closetime)\n        }\n      });\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      openingtimes: { ...this.state.openingtimes, [name]: value }\n    });\n    this.props.setOpeningTime(name, value, this.props.weekday);\n  };\n\n  render() {\n    return (\n      <div className=\"time-input\">\n        <label htmlFor=\"opentime\">Opens:</label>\n        <input\n          type=\"time\"\n          name=\"opentime\"\n          id=\"opentime\"\n          min=\"08:00\"\n          max=\"23:30\"\n          step=\"900\"\n          required\n          value={this.state.openingtimes.opentime}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"closetime\">Closes:</label>\n        <input\n          type=\"time\"\n          name=\"closetime\"\n          id=\"closetime\"\n          min=\"08:00\"\n          max=\"23:30\"\n          step=\"900\"\n          required\n          value={this.state.openingtimes.closetime}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TableRow extends Component {\n  state = {\n    cap: 0,\n    num: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    //get state with cap, num, index for each table\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        this.props.tablesStage1A(\n          this.state.cap,\n          this.state.num,\n          this.props.index\n        );\n      }\n    );\n  };\n\n  componentDidMount() {\n    // console.log(this.props.tableobject);\n    if (this.props.tableobject) {\n      this.setState(\n        {\n          cap: this.props.tableobject.cap,\n          num: this.props.tableobject.num\n        }\n        // () => console.log(this.state)\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"num\">Table Id: </label>\n        <input\n        className=\"table-list-id\"\n          type=\"text\"\n          name=\"num\"\n          id=\"num\"\n          value={this.state.num}\n          required\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"cap\">Guest number:</label>\n        <input\n        className=\"table-list-number\"\n          type=\"number\"\n          name=\"cap\"\n          id=\"cap\"\n          value={this.state.cap}\n          onChange={this.handleChange}\n          min=\"1\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TableRow from \"./TableRow\";\nimport axios from \"axios\";\n\nexport default class TableForm extends Component {\n  state = {\n    tables: []\n  };\n\n  //pass props to parent (RestaurantForm)\n  tablesStage1B = (cap, num, index) => {\n    this.props.tablesStage2A(cap, num, index);\n  };\n\n  //get amount of tables from RestaurantForm. .\n  getTableAmount = () => {\n    let n = this.props.tableAmount; //n = number of tables\n    n = parseInt(n);\n    if (!n) {\n      n = 0;\n    }\n\n    //Create a TableRow element for each table\n    return [...Array(n)].map((e, i) => {\n      return (\n        <React.Fragment key={i}>\n          <TableRow\n            tablesStage1A={this.tablesStage1B}\n            index={i}\n            tableobject={this.state.tables[i]}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/restaurants\")\n      .then(response => {\n        if (response.data) {\n          this.setState(\n            {\n              tables: response.data.tables\n            }\n            // () => console.log(this.state)\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    // Create list of table forms (list elements = amount of tables)\n    const tables = this.getTableAmount();\n    return (\n      <ul>\n        {tables.map((table, i) => {\n          return <li key={i}>{table}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TimeForm from \"./TimeForm\";\nimport TableForm from \"./TableForm\";\nimport axios from \"axios\";\n\nexport default class RestaurantForm extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    googleassistant: false,\n    phonegateway: false,\n    menu: \"\",\n    logo:\n      \"https://res.cloudinary.com/dmlqhwwfc/image/upload/v1570446767/TabledIn/tabledin_logo.png\",\n    weekdays: {\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      sunday: false\n    },\n    tablenumber: 0,\n    tables: [],\n    openingtimes: {\n      monday: {},\n      tuesday: {},\n      wednesday: {},\n      thursday: {},\n      friday: {},\n      saturday: {},\n      sunday: {}\n    }\n  };\n\n  //UPLOAD MENU (PDF)\n  fileChangedHandlerMenu = event => {\n    const menuFile = event.target.files[0];\n\n    const uploadData = new FormData();\n    uploadData.append(\"menu\", menuFile);\n\n    axios.post(\"/api/add-image/menu\", uploadData).then(response => {\n      const menu = response.data.secure_url;\n      this.setState({ menu: menu });\n    });\n  };\n\n  //UPLOAD LOGO\n  fileChangedHandlerLogo = event => {\n    const logoFile = event.target.files[0];\n\n    const uploadData = new FormData();\n    uploadData.append(\"logo\", logoFile);\n\n    axios.post(\"/api/add-image/logo\", uploadData).then(response => {\n      const logo = response.data.secure_url;\n      this.setState({ logo: logo });\n    });\n  };\n\n  // get values from text-inputs and update state with them\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        if (name === \"tablenumber\" && this.state.tablenumber) {\n          this.initializedTable(this.state.tablenumber);\n        }\n      }\n    );\n  };\n\n  setOpeningTime = (name, value, weekday) => {\n    //valute that we get from time form is a string and we need it as a number in DB\n    let valueInt = Number(value.replace(\":\", \"\"));\n    this.setState({\n      openingtimes: {\n        ...this.state.openingtimes,\n        [weekday]: {\n          ...this.state.openingtimes[weekday],\n          [name]: valueInt\n        }\n      }\n    });\n  };\n\n  //get values from checkboxes and update states of weekdays with them\n  handleCheckboxChange = event => {\n    const { weekdays } = { ...this.state };\n    const currentState = weekdays;\n\n    const name = event.target.name;\n    const check = event.target.checked;\n    currentState[name] = check;\n\n    this.setState({ weekdays: currentState });\n  };\n\n  //Get information from Optins\n  handleOptinCheckboxChange = event => {\n    const name = event.target.name;\n    const check = event.target.checked;\n    this.setState(\n      {\n        [name]: check\n      }\n      // () => {\n      //   console.log(\"#######OPTINSTATE : \", this.state);\n      // }\n    );\n  };\n\n  //create array of tables based on table number with default empty states for cap and num\n  initializedTable = tableNumber => {\n    let newTableState = [...Array(Number(tableNumber))].map(table => ({\n      cap: 0,\n      num: \"\"\n    }));\n    this.setState({ tables: newTableState });\n  };\n\n  //update array of tables with cap and num according to their indexes. Update state with tables with correct state.\n  tablesStage2B = (cap, num, index) => {\n    let totalTables = this.state.tables.map((table, i) => {\n      if (index === i) {\n        return {\n          cap,\n          num\n        };\n      } else return table;\n    });\n\n    this.setState(\n      {\n        tables: totalTables\n      },\n      () => {}\n    );\n  };\n\n  //POST results of form to create / update restaurant document\n  handleSubmit = (event, str) => {\n    event.preventDefault();\n\n    const {\n      name,\n      address,\n      phone,\n      email,\n      googleassistant,\n      phonegateway,\n      weekdays,\n      tablenumber,\n      tables,\n      openingtimes,\n      menu,\n      logo\n    } = this.state;\n\n    axios\n      .post(\"/api/restaurants\", {\n        name,\n        address,\n        phone,\n        email,\n        googleassistant,\n        phonegateway,\n        weekdays,\n        tablenumber,\n        tables,\n        openingtimes,\n        menu,\n        logo\n      })\n      .then(data => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className=\"rest-form-header\">Restaurant Information</h2>\n        <form onSubmit={this.handleSubmit} className=\"rest-form-form\">\n          <h3>General information</h3>\n          <div className=\"rest-form-info-div\">\n            <label htmlFor=\"name\">Restaurant name: </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"address\">Address: </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              id=\"address\"\n              required\n              value={this.state.address}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"phone\">Phone number: </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              value={this.state.phone}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"logo\">Upload Logo (PNG, JPEG): </label>\n            <input\n              type=\"file\"\n              name=\"logo\"\n              id=\"logo\"\n              onChange={this.fileChangedHandlerLogo}\n            />\n\n            <label htmlFor=\"menu\">Upload Menu (PDF): </label>\n            <input\n              type=\"file\"\n              name=\"menu\"\n              id=\"menu\"\n              onChange={this.fileChangedHandlerMenu}\n            />\n          </div>\n\n          <h3>Opening times</h3>\n          <div className=\"rest-form-time-div\">\n            <div>\n              <p>Monday</p>\n              <label htmlFor=\"monday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"monday\"\n                id=\"monday\"\n                checked={this.state.weekdays.monday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.monday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"monday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Tuesday</p>\n              <label htmlFor=\"tuesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"tuesday\"\n                id=\"tuesday\"\n                checked={this.state.weekdays.tuesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.tuesday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"tuesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Wednesday</p>\n              <label htmlFor=\"wednesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"wednesday\"\n                id=\"wednesday\"\n                checked={this.state.weekdays.wednesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.wednesday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"wednesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Thursday</p>\n              <label htmlFor=\"thursday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"thursday\"\n                id=\"thursday\"\n                checked={this.state.weekdays.thursday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.thursday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"thursday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Friday</p>\n              <label htmlFor=\"friday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"friday\"\n                id=\"friday\"\n                checked={this.state.weekdays.friday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.friday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"friday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Saturday</p>\n              <label htmlFor=\"saturday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"saturday\"\n                id=\"saturday\"\n                checked={this.state.weekdays.saturday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.saturday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"saturday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Sunday</p>\n              <label htmlFor=\"sunday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"sunday\"\n                id=\"sunday\"\n                checked={this.state.weekdays.sunday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.sunday && (\n                <TimeForm\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"sunday\"}\n                />\n              )}\n            </div>\n          </div>\n\n          <h3>Seating</h3>\n          <div className=\"rest-form-table-div\">\n            <div className=\"rest-form-table-tnumber\">\n              <label htmlFor=\"tablenumber\">Number of tables: </label>\n              <input\n                type=\"number\"\n                name=\"tablenumber\"\n                id=\"tablenumber\"\n                value={this.state.tablenumber}\n                onChange={this.handleChange}\n                min=\"1\"\n                required\n              />\n            </div>\n            {/* render TableForm with amount of TableRows equal to number of tables */}\n            <TableForm\n              tableAmount={this.state.tablenumber}\n              tablesStage2A={this.tablesStage2B}\n            />\n          </div>\n\n          <div className=\"rest-form-optin-header-div\">\n            <img\n              className=\"rest-form-optin-header-img\"\n              src=\"/Google_icon_coloured.png\"\n              alt=\"Google-icon\"\n            />\n            <h3>Integrations</h3>\n          </div>\n          <div className=\"rest-form-optin-div\">\n            <div className=\"rest-form-optin-subdiv optin-top\">\n              <label htmlFor=\"googleassistant\">\n                Google Assistant integration:\n              </label>\n              <input\n                type=\"checkbox\"\n                name=\"googleassistant\"\n                id=\"googleassistant\"\n                checked={this.state.googleassistant}\n                onChange={this.handleOptinCheckboxChange}\n              />\n            </div>\n            <div className=\"rest-form-optin-subdiv\">\n              <label htmlFor=\"phonegateway\">Phone Gateway integration:</label>\n              <input\n                type=\"checkbox\"\n                name=\"phonegateway\"\n                id=\"phonegateway\"\n                checked={this.state.phonegateway}\n                onChange={this.handleOptinCheckboxChange}\n              />\n            </div>\n          </div>\n          {this.state.phonegateway && (\n            <div className=\"rest-form-optin-phonenumber\">\n              <p>\n                Your Phone Gateway number: <strong>+1 424-255-7279</strong>\n              </p>\n            </div>\n          )}\n          <button className=\"edit-button rest-form-button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport uuidv4 from \"uuid/v4\";\n\nexport default class ShowRestaurant extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    logo: \"\",\n    menu: \"\",\n    phonegateway: false,\n    weekdays: {\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      sunday: false\n    },\n    tablenumber: 0,\n    tables: [],\n    openingtimes: {\n      monday: {},\n      tuesday: {},\n      wednesday: {},\n      thursday: {},\n      friday: {},\n      saturday: {},\n      sunday: {}\n    }\n  };\n\n  convertTime = time => {\n    let t = time.toString();\n    if (t.length === 3) {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = \"0\" + t.substr(0, 1) + \":\";\n      t = tStart + tEnd;\n    } else {\n      let tEnd = t.slice(t.length - 2);\n      let tStart = t.substr(0, 2) + \":\";\n      t = tStart + tEnd;\n    }\n    return t;\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/restaurants\")\n      .then(response => {\n        if (response) {\n          Object.keys(response.data.openingtime).forEach(key => {\n            response.data.openingtime[key].opentime = this.convertTime(\n              response.data.openingtime[key].opentime\n            );\n            response.data.openingtime[key].closetime = this.convertTime(\n              response.data.openingtime[key].closetime\n            );\n          });\n\n          this.setState({\n            name: response.data.name,\n            address: response.data.address,\n            phone: response.data.phone,\n            email: response.data.email,\n            phonegateway: response.data.phonegateway,\n            weekdays: response.data.weekdays,\n            tablenumber: response.data.tablenumber,\n            tables: response.data.tables,\n            openingtimes: response.data.openingtime,\n            menu: response.data.menu,\n            logo: response.data.logo\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    const tables = this.state.tables;\n    const tableItems = tables.map(table => {\n      const id = uuidv4();\n      return (\n        <tr key={id}>\n          <td>{table.num}</td>\n          <td>{table.cap}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"rest-show-div\">\n        <h2 className=\"rest-form-header\">Information for {this.state.name}</h2>\n\n        <div className=\"rest-show-upload-div\">\n          <img\n            className=\"rest-show-logo\"\n            src={this.state.logo}\n            alt={this.state.name}\n          />\n\n          {this.state.menu && (\n            <button className=\"view-button\">\n              <a\n                href={this.state.menu}\n                download=\"Menu\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View Menu\n              </a>\n            </button>\n          )}\n        </div>\n\n        <h3 className=\"rest-show-info-h3\">General information</h3>\n        <div className=\"rest-show-info-div\">\n          <div className=\"rest-show-info-div-address\">\n            <p className=\"address-p\">\n              <strong>Address: </strong>\n              {/* {this.state.address} */}\n            </p>\n            <p>{this.state.address}</p>\n          </div>\n          {this.state.email && (\n            <p>\n              <strong>Email: </strong>\n              {this.state.email}\n            </p>\n          )}\n\n          {this.state.phone && (\n            <p>\n              <strong>Phone: </strong>\n              {this.state.phone}\n            </p>\n          )}\n\n          {this.state.phonegateway && (\n            <p>\n              <strong>Phone Gateway: </strong>\n              +1 424-255-7279\n            </p>\n          )}\n        </div>\n\n        <h3 className=\"rest-show-info-h3\">Opening times</h3>\n        <ul className=\"rest-show-info-ul\">\n          <li>\n            <strong className=\"rest-show-info-monday\">Monday:</strong>\n            {!this.state.weekdays.monday && <p>Closed</p>}\n            {this.state.weekdays.monday && (\n              <p>{this.state.openingtimes.monday.opentime} -</p>\n            )}\n            {this.state.weekdays.monday && (\n              <p>{this.state.openingtimes.monday.closetime}</p>\n            )}\n          </li>\n\n          <li>\n            <strong className=\"rest-show-info-tuesday\">Tuesday:</strong>\n            {!this.state.weekdays.tuesday && <p>Closed</p>}\n            {this.state.weekdays.tuesday && (\n              <p>{this.state.openingtimes.tuesday.opentime} -</p>\n            )}\n            {this.state.weekdays.tuesday && (\n              <p>{this.state.openingtimes.tuesday.closetime}</p>\n            )}\n          </li>\n\n          <li>\n            <strong className=\"rest-show-info-wednesday\">Wednesday:</strong>\n            {!this.state.weekdays.wednesday && <p>Closed</p>}\n            {this.state.weekdays.wednesday && (\n              <p>{this.state.openingtimes.wednesday.opentime} -</p>\n            )}\n            {this.state.weekdays.wednesday && (\n              <p>{this.state.openingtimes.wednesday.closetime}</p>\n            )}\n          </li>\n\n          <li>\n            <strong className=\"rest-show-info-thursday\">Thursday:</strong>\n            {!this.state.weekdays.thursday && <p>Closed</p>}\n            {this.state.weekdays.thursday && (\n              <p>{this.state.openingtimes.thursday.opentime} -</p>\n            )}\n            {this.state.weekdays.thursday && (\n              <p>{this.state.openingtimes.thursday.closetime}</p>\n            )}\n          </li>\n\n          <li>\n            <strong className=\"rest-show-info-friday\">Friday:</strong>\n            {!this.state.weekdays.friday && <p>Closed</p>}\n            {this.state.weekdays.friday && (\n              <p>{this.state.openingtimes.friday.opentime} -</p>\n            )}\n            {this.state.weekdays.friday && (\n              <p>{this.state.openingtimes.friday.closetime}</p>\n            )}\n          </li>\n\n          <li>\n            <strong className=\"rest-show-info-saturday\">Saturday:</strong>\n            {!this.state.weekdays.saturday && <p>Closed</p>}\n            {this.state.weekdays.saturday && (\n              <p>{this.state.openingtimes.saturday.opentime} -</p>\n            )}\n            {this.state.weekdays.saturday && (\n              <p>{this.state.openingtimes.saturday.closetime}</p>\n            )}\n          </li>\n\n          <li>\n            <strong className=\"rest-show-info-sunday\">Sunday:</strong>\n            {!this.state.weekdays.sunday && <p>Closed</p>}\n            {this.state.weekdays.sunday && (\n              <p>{this.state.openingtimes.sunday.opentime} -</p>\n            )}\n            {this.state.weekdays.sunday && (\n              <p>{this.state.openingtimes.sunday.closetime}</p>\n            )}\n          </li>\n        </ul>\n\n        <h3 className=\"rest-show-info-h3\">Seating</h3>\n        <div className=\"rest-show-table-div\">\n          <p>\n            Number of tables: <strong>{this.state.tablenumber}</strong>\n          </p>\n          <table>\n            <thead>\n              <tr>\n                <th>Table Id</th>\n                <th>Guest number</th>\n              </tr>\n            </thead>\n            <tbody>{tableItems}</tbody>\n          </table>\n        </div>\n\n        <Link to=\"/restaurant/edit\">\n          <button className=\"edit-button\">Edit Info</button>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TimeForm from \"./TimeForm\";\nimport TableForm from \"./TableForm\";\nimport axios from \"axios\";\n\nexport default class EditRestaurant extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    menu: \"\",\n    logo: \"\",\n    weekdays: {\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false,\n      sunday: false\n    },\n    tablenumber: 0,\n    tables: [],\n    openingtimes: {\n      monday: {},\n      tuesday: {},\n      wednesday: {},\n      thursday: {},\n      friday: {},\n      saturday: {},\n      sunday: {}\n    }\n  };\n\n  //get Restaurant Data\n  getData = () => {\n    axios\n      .get(\"/api/restaurants\")\n      .then(response => {\n        // console.log(response);\n        this.setState({\n          name: response.data.name,\n          address: response.data.address,\n          phone: response.data.phone,\n          email: response.data.email,\n          weekdays: response.data.weekdays,\n          tablenumber: response.data.tablenumber,\n          tables: response.data.tables,\n          openingtimes: response.data.openingtime,\n          menu: response.data.menu,\n          logo:\n            response.data.logo ||\n            \"https://res.cloudinary.com/dmlqhwwfc/image/upload/v1570446767/TabledIn/tabledin_logo.png\"\n        });\n      })\n      .catch(err => {\n        console.log(err.response);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  //UPLOAD MENU (PDF)\n  fileChangedHandlerMenu = event => {\n    const menuFile = event.target.files[0];\n\n    const uploadData = new FormData();\n    uploadData.append(\"menu\", menuFile);\n\n    axios.post(\"/api/add-image/menu\", uploadData).then(response => {\n      const menu = response.data.secure_url;\n      this.setState({ menu: menu });\n    });\n  };\n\n  //UPLOAD LOGO\n  fileChangedHandlerLogo = event => {\n    const logoFile = event.target.files[0];\n\n    const uploadData = new FormData();\n    uploadData.append(\"logo\", logoFile);\n\n    axios.post(\"/api/add-image/logo\", uploadData).then(response => {\n      const logo = response.data.secure_url;\n      this.setState({ logo: logo });\n    });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        if (name === \"tablenumber\" && this.state.tablenumber) {\n          this.initializedTable(this.state.tablenumber);\n        }\n      }\n    );\n  };\n\n  setOpeningTime = (name, value, weekday) => {\n    //valute that we get from time form is a string and we need it as a number in DB\n    let valueInt = Number(value.replace(\":\", \"\"));\n    this.setState({\n      openingtimes: {\n        ...this.state.openingtimes,\n        [weekday]: {\n          ...this.state.openingtimes[weekday],\n          [name]: valueInt\n        }\n      }\n    });\n  };\n\n  //get values from checkboxes and update states of weekdays with them\n  handleCheckboxChange = event => {\n    const { weekdays } = { ...this.state };\n    const currentState = weekdays;\n\n    const name = event.target.name;\n    const check = event.target.checked;\n    currentState[name] = check;\n\n    this.setState({ weekdays: currentState });\n  };\n\n  //create array of tables based on table number with default empty states for cap and num\n  initializedTable = tableNumber => {\n    let newTableState = [...Array(Number(tableNumber))].map(table => ({\n      cap: 0,\n      num: \"\"\n    }));\n    this.setState({ tables: newTableState });\n  };\n\n  //update array of tables with cap and num according to their indexes. Update state with tables with correct state.\n  tablesStage2B = (cap, num, index) => {\n    let totalTables = this.state.tables.map((table, i) => {\n      if (index === i) {\n        return {\n          cap,\n          num\n        };\n      } else return table;\n    });\n\n    this.setState(\n      {\n        tables: totalTables\n      },\n      () => {}\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const {\n      name,\n      address,\n      phone,\n      email,\n      logo,\n      menu,\n      weekdays,\n      tablenumber,\n      tables,\n      openingtimes\n    } = this.state;\n\n    axios\n      .put(\"/api/restaurants\", {\n        name,\n        address,\n        phone,\n        email,\n        logo,\n        menu,\n        weekdays,\n        tablenumber,\n        tables,\n        openingtimes\n      })\n      .then(data => {\n        this.props.history.push(\"/restaurant/show\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className=\"rest-form-header\">\n          Update Information for {this.state.name}\n        </h2>\n\n        <form onSubmit={this.handleSubmit} className=\"rest-form-form\">\n          <h3>General information: </h3>\n          <div className=\"rest-form-info-div\">\n            <label htmlFor=\"address\">Address: </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              id=\"address\"\n              value={this.state.address}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"phone\">Phone number: </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              value={this.state.phone}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n\n            <label htmlFor=\"logo\">Change Logo (PNG, JPEG): </label>\n            <input\n              type=\"file\"\n              name=\"logo\"\n              id=\"logo\"\n              onChange={this.fileChangedHandlerLogo}\n            />\n\n            <label htmlFor=\"menu\">Upload new Menu (PDF): </label>\n            <input\n              type=\"file\"\n              name=\"menu\"\n              id=\"menu\"\n              onChange={this.fileChangedHandlerMenu}\n            />\n          </div>\n\n          <h3>Opening times: </h3>\n          <div className=\"rest-form-time-div\">\n            <div>\n              <p>Monday</p>\n              <label htmlFor=\"monday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"monday\"\n                id=\"monday\"\n                checked={this.state.weekdays.monday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.monday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.monday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"monday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Tuesday</p>\n              <label htmlFor=\"tuesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"tuesday\"\n                id=\"tuesday\"\n                checked={this.state.weekdays.tuesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.tuesday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.tuesday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"tuesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Wednesday</p>\n              <label htmlFor=\"wednesday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"wednesday\"\n                id=\"wednesday\"\n                checked={this.state.weekdays.wednesday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.wednesday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.wednesday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"wednesday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Thursday</p>\n              <label htmlFor=\"thursday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"thursday\"\n                id=\"thursday\"\n                checked={this.state.weekdays.thursday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.thursday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.thursday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"thursday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Friday</p>\n              <label htmlFor=\"friday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"friday\"\n                id=\"friday\"\n                checked={this.state.weekdays.friday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.friday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.friday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"friday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Saturday</p>\n              <label htmlFor=\"saturday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"saturday\"\n                id=\"saturday\"\n                checked={this.state.weekdays.saturday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.saturday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.saturday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"saturday\"}\n                />\n              )}\n            </div>\n            <div>\n              <p>Sunday</p>\n              <label htmlFor=\"sunday\">Open? </label>\n              <input\n                type=\"checkbox\"\n                name=\"sunday\"\n                id=\"sunday\"\n                checked={this.state.weekdays.sunday}\n                onChange={this.handleCheckboxChange}\n              />\n              {this.state.weekdays.sunday && (\n                <TimeForm\n                  openingtimes={this.state.openingtimes.sunday}\n                  setOpeningTime={this.setOpeningTime}\n                  weekday={\"sunday\"}\n                />\n              )}\n            </div>\n          </div>\n\n          <h3>Seating information: </h3>\n          <div className=\"rest-form-table-div\">\n            <div className=\"rest-form-table-tnumber\">\n              <label htmlFor=\"tablenumber\">Number of tables: </label>\n              <input\n                type=\"number\"\n                name=\"tablenumber\"\n                id=\"tablenumber\"\n                value={this.state.tablenumber}\n                onChange={this.handleChange}\n                min=\"0\"\n              />\n            </div>\n            {/* render TableForm with amount of TableRows equal to number of tables */}\n            <TableForm\n              tables={this.state.tables}\n              tableAmount={this.state.tablenumber}\n              tablesStage2A={this.tablesStage2B}\n            />\n          </div>\n          <button className=\"edit-button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Modal extends Component {\n  onClickParentFunction = () => {\n    this.props.onClickFunction();\n  };\n\n  onClose = () => {\n    this.props.onClose && this.props.onClose();\n  };\n\n  render() {\n    //toggle Modal state\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div className=\"modal-background\">\n        <div className=\"modal\" id=\"modal\">\n          <h3>Confirmation required</h3>\n          <div className=\"modal-content\">{this.props.children}</div>\n          <div className=\"actions\">\n            <button\n              className=\"delete-button\"\n              onClick={(this.onClose, this.onClickParentFunction)}\n            >\n              Yes, delete\n            </button>\n            <button className=\"cancel-button\" onClick={this.onClose}>\n              No, cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport Modal from \"./Modal\";\nimport axios from \"axios\";\n\nexport default class Bookings extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      bookings: [],\n      show: false\n    };\n  }\n\n  //function to toggle modal\n  showModal = booking => {\n    this.setState(state => {\n      //check if the id is the same as the one being passed into the function. If yes, show modal. If no, don't show modal.\n      const bookings = state.bookings.map((item, j) => {\n        if (booking._id === item._id) {\n          item.show = !item.show;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      return {\n        bookings\n      };\n    });\n  };\n\n  // Function for datepicker\n  handleDayClick(day) {\n    this.setState({ selectedDay: day });\n  }\n\n  //get all bookings\n  getData = () => {\n    axios\n      .get(\"/api/bookings\")\n      .then(response => {\n        //add show property to bookings\n        let bookingsData = response.data.map(el => {\n          el.show = false;\n          return el;\n        });\n\n        this.setState({\n          bookings: bookingsData\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  //delete selected booking\n  deleteBooking = id => {\n    axios.delete(`/api/bookings/${id}`).then(res => {\n      this.getData();\n    });\n  };\n\n  render() {\n    //get default Date\n    let defaultYear = new Date().getFullYear();\n    let defaultYearString = defaultYear.toString();\n    let defaultYearMonth = \"\";\n\n    let defaultMonth = new Date().getMonth() + 1; //plus one as getMonth starts with index 0\n    let defaultMonthString = defaultMonth.toString();\n    if (defaultMonthString.length === 1) {\n      defaultYearMonth = defaultYearString.concat(\"-0\", defaultMonthString);\n    } else {\n      defaultYearMonth = defaultYearString.concat(\"-\", defaultMonthString);\n    }\n\n    let defaultDay = new Date().getDate();\n    let defaultDayString = defaultDay.toString();\n    let defaultDate = \"\";\n\n    if (defaultDayString.length === 1) {\n      defaultDate = defaultYearMonth.concat(\"-0\", defaultDayString);\n    } else {\n      defaultDate = defaultYearMonth.concat(\"-\", defaultDayString);\n    }\n\n    //get date selected in calender\n    let calenderString = \"\";\n    const calenderObject = JSON.stringify(this.state.selectedDay) || null;\n    if (calenderObject !== null) {\n      calenderString = [...calenderObject].splice(1, 10).join(\"\");\n    } else {\n      calenderString = null;\n    }\n\n    //set selected Date to have the default value of the current date. On picking a date in the calender, date changes to the calender date\n    const selectedDate = calenderString || defaultDate;\n\n    //filter Bookings and only return bookings with the correct date\n    const filteredBookings = this.state.bookings.filter(booking => {\n      let bookingDate = [...booking.date].splice(0, 10).join(\"\");\n      let dateMatched = bookingDate === selectedDate;\n      return dateMatched;\n    });\n\n    const bookingItems = filteredBookings.map((booking, index) => {\n      //format time for displaying\n      let hours = \"\";\n      let minutes = \"\";\n      if (booking.timeslot.length === 3) {\n        hours = \"0\" + booking.timeslot.slice(0, 1);\n        minutes = booking.timeslot.slice(1);\n      }\n      if (booking.timeslot.length === 4) {\n        hours = booking.timeslot.slice(0, 2);\n        minutes = booking.timeslot.slice(2);\n      }\n\n      let bookingTime = hours + \":\" + minutes;\n\n      return (\n        <div key={booking._id}>\n          {booking.visitorname && (\n            <div>\n              <li className=\"bookings-list-li\">\n                <div className=\"bookings-list-div\">\n                  <div className=\"bookings-list-left\">\n                    <p>{booking.visitorname}</p>\n                    <p>Guests: {booking.visitorcount}</p>\n                  </div>\n\n                  <div className=\"bookings-list-middle\">\n                    <p>{bookingTime}</p>\n                    <p>Table {booking.tablenumber}</p>\n                  </div>\n\n                  <div className=\"bookings-list-right\">\n                    <button\n                      className=\"delete-button delete-booking\"\n                      onClick={e => {\n                        this.showModal(booking);\n                      }}\n                    >\n                      {\" \"}\n                      Delete{\" \"}\n                    </button>\n                    {booking.webapp && (\n                      <img src=\"/logo192.png\" alt=\"TabledIn-Logo\" />\n                    )}\n                    {booking.dialogflow && (\n                      <img\n                        src=\"/Google_icon_coloured.png\"\n                        alt=\"TabledIn-Logo\"\n                      />\n                    )}\n                  </div>\n                </div>\n                <div className=\"bookings-list-bottom\">\n                  {booking.visitorphone && <p>{booking.visitorphone} </p>}\n                  {booking.visitoremail && <p>{booking.visitoremail} </p>}\n                </div>\n                <Modal\n                  onClose={() => {\n                    this.showModal(booking);\n                  }}\n                  show={booking.show}\n                  // deleteBooking={this.deleteBooking}\n                  // bookingID={booking._id}\n                  onClickFunction={() => {\n                    this.deleteBooking(booking._id);\n                  }}\n                >\n                  Are you sure you wish to delete this booking?\n                </Modal>\n              </li>\n            </div>\n          )}\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"booking-show-div\">\n        <div className=\"booking-show-div-header\">\n          <h2 className=\"booking-form-header\">Your Bookings</h2>\n          <Link to=\"/booking/add\">\n            <button className=\"add-booking-button\">Add booking</button>\n          </Link>\n        </div>\n\n        <div className=\"booking-show-div-daypicker\">\n          {this.state.selectedDay ? (\n            <p>Bookings for: {this.state.selectedDay.toDateString()}</p>\n          ) : (\n            <p>Please select a day.</p>\n          )}\n          <DayPicker\n            onDayClick={this.handleDayClick}\n            selectedDays={this.state.selectedDay}\n          />\n        </div>\n\n        <ul className=\"booking-show-div-bookings\">\n          {bookingItems && bookingItems.length ? (\n            bookingItems\n          ) : (\n            <p className=\"booking-show-div-noBooking\">\n              No bookings for this date\n            </p>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport axios from \"axios\";\n\nexport default class BookingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      guestnumber: 0,\n      arrivaltime: \"\",\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      message: \"\",\n      success: \"\",\n      dialogflow: false,\n      webapp: false\n    };\n  }\n\n  // Function for datepicker\n  handleDayClick(day) {\n    this.setState({ selectedDay: day });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n    // console.log({\n    //   [name]: value\n    // });\n  };\n\n  //Handle Submit with message functionality\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let success = \"Created booking.\";\n\n    axios\n      .post(\"/api/bookings\", {\n        selectedDay: this.state.selectedDay,\n        guestnumber: this.state.guestnumber,\n        arrivaltime: this.state.arrivaltime,\n        name: this.state.name,\n        phone: this.state.phone,\n        email: this.state.email,\n        dialogflow: false,\n        webapp: true\n      })\n      .then(data => {\n        if (data.data.message) {\n          this.setState({\n            message: data.data.message,\n            success: \"\"\n          });\n        } else if (!data.data.message) {\n          this.setState({\n            success: success,\n            message: \"\",\n            selectedDay: undefined,\n            guestnumber: 0,\n            arrivaltime: \"\",\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dialogflow: false,\n            webapp: false\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"rest-form-header\">Add a Booking</h2>\n\n        <form onSubmit={this.handleSubmit} className=\"booking-form-form\">\n          <h3 className=\"booking-form-daypicker-header\">Booking Details</h3>\n\n          <div className=\"booking-form-div-daypicker\">\n            {this.state.selectedDay ? (\n              <p>Date of booking: {this.state.selectedDay.toDateString()}</p>\n            ) : (\n              <p>Please select a day.</p>\n            )}\n            <DayPicker\n              onDayClick={this.handleDayClick}\n              selectedDays={this.state.selectedDay}\n            />\n          </div>\n\n          <div className=\"booking-form-div-guestinfo\">\n            <div>\n              <label htmlFor=\"arrivaltime\">Time: </label>\n              <input\n                type=\"time\"\n                name=\"arrivaltime\"\n                id=\"arrivaltime\"\n                min=\"08:00\"\n                max=\"23:30\"\n                step=\"900\"\n                required\n                value={this.state.arrivaltime}\n                onChange={this.handleChange}\n              />\n            </div>\n\n            <div className=\"booking-form-guests\">\n              <label htmlFor=\"guestnumber\">Guests: </label>\n              <input\n                type=\"number\"\n                name=\"guestnumber\"\n                id=\"guestnumber\"\n                value={this.state.guestnumber}\n                onChange={this.handleChange}\n                min=\"1\"\n              />\n            </div>\n          </div>\n\n          <h3 className=\"booking-form-guest-header\">Guest Details</h3>\n          <div className=\"booking-form-div-guestdetails\">\n            <label htmlFor=\"name\">Name: </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"phone\">Phone number: </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              value={this.state.phone}\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n          {this.state.message && (\n            <p className=\"auth-message\">\n              {this.state.message} <Link to=\"/\">Or go back to home.</Link>\n            </p>\n          )}\n          {this.state.success && (\n            <p className=\"success-message\">\n              {this.state.success} <Link to=\"/\">Back to home.</Link>\n            </p>\n          )}\n\n          <button className=\"edit-button\" type=\"Submit\">\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport Modal from \"./Modal\";\nimport axios from \"axios\";\n\n\nexport default class EditPlanner extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    //this.editSchedule = this.editSchedule.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      open: false,\n      message: \"\",\n      openingtime: \"\",\n      closingtime: \"\",\n      _id: \"\",\n      show: false\n    };\n  }\n\n  \n\n\n  //function to toggle modal\n  showModal = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  // Function for datepicker\n  handleDayClick(day) {\n    this.props.changeDate(day);\n    // console.log(this.state.selectedDay)\n    axios\n      .post(\"/api/planner\", {\n        selectedDay: day\n      })\n      .then(response => {\n        // console.log(response);\n        if (response.data.message) {\n          this.setState({\n            message: response.data.message,\n            open: false,\n            openingtime: \"\",\n            closingtime: \"\",\n            _id: \"\"\n          });\n        } else {\n          this.setState({\n            open: response.data.open,\n            openingtime: response.data.openingtime,\n            closingtime: response.data.closingtime,\n            _id: response.data._id,\n            message: \"\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    //format openingtime for displaying\n    let hours = \"\";\n    let minutes = \"\";\n    let openString = this.state.openingtime.toString();\n\n    if (openString.length === 3) {\n      hours = \"0\" + openString.slice(0, 1);\n      minutes = openString.slice(1);\n    }\n    if (openString.length === 4) {\n      hours = openString.slice(0, 2);\n      minutes = openString.slice(2);\n    }\n\n    let openingTime = hours + \":\" + minutes;\n\n    //format closingtime for displaying\n    let closehours = \"\";\n    let closeminutes = \"\";\n    let closeString = this.state.closingtime.toString();\n\n    if (closeString.length === 3) {\n      closehours = closeString.slice(0, 1);\n      closeminutes = closeString.slice(1);\n    }\n    if (closeString.length === 4) {\n      closehours = closeString.slice(0, 2);\n      closeminutes = closeString.slice(2);\n    }\n\n    let closingTime = closehours + \":\" + closeminutes;\n\n    return (\n      <div className=\"booking-show-div planner-overall\">\n        <h2 className=\"rest-form-header\">Search for Schedule</h2>\n\n        <div className=\"booking-show-div-daypicker\">\n          {this.props.selectedDay ? (\n            <p>Schedule for: {this.props.selectedDay.toDateString()}</p>\n          ) : (\n            <p>Please select a day.</p>\n          )}\n          <DayPicker\n            onDayClick={this.handleDayClick}\n            selectedDays={this.props.selectedDay}\n          />\n        </div>\n\n        {this.state._id ? (\n          <div className=\"schedule-message-div\">\n            {this.state.open ? <p className=\"schedule-message-top\">Open</p> : <p className=\"schedule-message-top\">Closed</p>}\n            {this.state.open && <p>{openingTime} - {closingTime}</p>}\n          </div>\n        ) : (\n          <div className=\"no-schedule-message-div\">\n          <p className=\"no-schedule-message-p\">No schedule found.</p>\n          </div>\n        )}\n\n        {this.state._id ? (\n          <div>\n            <button\n              className=\"edit-button edit-schedule-button\"\n              onClick={e => {\n                this.showModal();\n              }}\n            >\n              Change schedule\n            </button>\n\n            <Modal\n              onClose={this.showModal}\n              show={this.state.show}\n              deleteSchedule={this.editSchedule}\n              onClickFunction={() => {\n                this.props.editSchedule(this.props);\n              }}\n            >\n              Changing the schedule will delete all previous bookings for this\n              date. Proceed?\n            </Modal>\n          </div>\n        ) : (\n          <Link to=\"/planner/edit\">\n            <button className=\"add-schedule-button\">Add schedule</button>\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport axios from \"axios\";\n\nexport default class EditPlanner extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      open: false,\n      opentime: \"\",\n      closetime: \"\",\n      success: \"\"\n    };\n  }\n  //get values from text inputs and update state of weekday, opentime, closetime\n  handleDayClick(day) {\n    this.props.changeDate(day);\n    this.setState({ success: \"\" });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  //get values from checkbox and update state of \"open\"\n  handleCheckboxChange = event => {\n    this.setState({ open: !this.state.open });\n  };\n\n  //Function to be called when submitting the form\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state);\n    // console.log(\"PROPS SELECTED DAY: \", this.props.selectedDay);\n    let success = \"Created schedule.\";\n\n    axios\n      .post(\"/api/planner/edit\", {\n        selectedDay: this.props.selectedDay,\n        open: this.state.open,\n        opentime: this.state.opentime,\n        closetime: this.state.closetime\n      })\n      .then(res => {\n        if (res.data.message) {\n          this.setState({\n            message: res.data.message,\n            success: \"\"\n          });\n        } else if (!res.data.message) {\n          this.setState({\n            success: success,\n            message: \"\",\n            selectedDay: undefined,\n            open: false,\n            opentime: \"\",\n            closetime: \"\"\n          });\n        }\n        this.props.onDateChange();\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <React.Fragment>\n        <h2 className=\"rest-form-header\">Add new Schedule</h2>\n        <form onSubmit={this.handleSubmit} className=\"booking-form-form\">\n          <div className=\"booking-form-div-daypicker\">\n            {this.props.selectedDay ? (\n              <p>Schedule for: {this.props.selectedDay.toDateString()}</p>\n            ) : (\n              <p>Please select a day.</p>\n            )}\n            <DayPicker\n              onDayClick={this.handleDayClick}\n              selectedDays={this.props.selectedDay}\n            />\n          </div>\n\n          <div className=\"schedule-time-div\">\n            <div className=\"schedule-form-checkbox-div\">\n              <label htmlFor=\"open\">Open</label>\n              <input\n                className=\"schedule-form-input-open\"\n                type=\"checkbox\"\n                name=\"open\"\n                id=\"open\"\n                checked={this.state.open}\n                onChange={this.handleCheckboxChange}\n              />\n\n              <label htmlFor=\"open\">Closed</label>\n              <input\n                type=\"checkbox\"\n                name=\"open\"\n                id=\"open\"\n                checked={!this.state.open}\n                onChange={this.handleCheckboxChange}\n              />\n            </div>\n\n            {this.state.open && (\n              <div>\n                <label htmlFor=\"opentime\">Opens: </label>\n                <input\n                  className=\"schedule-form-time-open\"\n                  type=\"time\"\n                  name=\"opentime\"\n                  id=\"opentime\"\n                  min=\"08:00\"\n                  max=\"23:30\"\n                  step=\"900\"\n                  required\n                  value={this.state.opentime}\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"closetime\">Closes: </label>\n                <input\n                  type=\"time\"\n                  name=\"closetime\"\n                  id=\"closetime\"\n                  min=\"08:00\"\n                  max=\"23:30\"\n                  step=\"900\"\n                  required\n                  value={this.state.closetime}\n                  onChange={this.handleChange}\n                />\n              </div>\n            )}\n\n            {this.state.message && (\n              <p className=\"auth-message\">{this.state.message}</p>\n            )}\n            {this.state.success && (\n              <p className=\"success-message\">\n                {this.state.success} <Link to=\"/planner\">Back to Planner.</Link>\n              </p>\n            )}\n          </div>\n\n          <button className=\"edit-button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"about-div\">\n          <h2>About TabledIn</h2>\n\n          <p className=\"about-section-top-p\">\n            TabledIn is an integrated mobile-first bookings tool that allows\n            restaurant owners to manage their schedules & automatically\n            configure their own chatbot agent for taking reservations.\n          </p>\n\n          <h3 className=\"about-section-top-h3-middle\">Programmers</h3>\n          <p>\n            This webapp was built as a final project for the Ironhack\n            Webdevelopment Bootcamp, Summer 2019 in Berlin by{\" \"}\n            <a\n              className=\"about-text-link\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/in/marko-milovanov-7522807a/\"\n            >\n              Marko Milovanov{\" \"}\n            </a>\n            and{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"about-text-link\"\n              href=\"https://www.linkedin.com/in/sarahhouben\"\n            >\n              Sarah Houben\n            </a>\n            .\n          </p>\n\n          <h3 className=\"about-section-top-h3-bottom\">Technologies</h3>\n          <p>\n            <strong>Restaurant webapp: </strong>\n            ReactJS, Node.js, Express.js, Passport.js, MongoDB, Mongoose ODM\n          </p>\n          <p>\n            <strong>Chatbot: </strong>Google Cloud Dialogflow\n          </p>\n\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"about-image-link\"\n            href=\"https://github.com/SarahHouben/TabledIn\"\n          >\n            {\" \"}\n            <img src=\"github-icon.svg\" alt=\"Github logo\" /> View the source code\n          </a>\n\n          <h3 className=\"about-section-top-h3-bottom\">Try it out</h3>\n          <p>\n            If you would like to test the full functionality of TabledIn, click on <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"about-text-link\"\n              href=\"https://assistant.google.com/services/a/uid/000000691425a561?hl\"\n            >this link{\" \"}\n            </a>\n          on a mobile device to sign up for the Alpha testing-stage of the chatbot with a gmail account. Once signed up, open Google Assistant and action TabledIn by saying <i>\"Ok Google, talk to TabledIn\"</i>. You will be asked to choose a restaurant. Currently you have the choice between the restaurants <i>\"Nora's Garden\"</i> and <i>\"Pizzeria Da Toni\"</i>. You can choose to make a reservation or to cancel a reservation under your name.\n            </p>\n\n            <p>\n              To view the bookings you have added via the chatbot, log into the web app using the credentials <i>\"Toni\"</i> and password <i>\"testtest\"</i>  for <i>\"Pizzeria Da Toni\"</i> or <i>\"Nora\"</i>  and password <i>\"testtest\"</i> for <i>\"Nora's Garden\"</i>.\n            </p>\n            <p>\n             Alternatively, simply create a new free account  on the webapp to view the restaurant bookings platform.\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Privacy extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"about-div privacy-div\">\n          <h2>Privacy Policy</h2>\n\n          <p>Effective date: October 10, 2019</p>\n\n          <p>\n            TabledIn (\"us\", \"we\", or \"our\") operates the\n            https://tabledin.herokuapp.com/ website (the \"Service\").\n          </p>\n\n          <p>\n            This page informs you of our policies regarding the collection, use,\n            and disclosure of personal data when you use our Service and the\n            choices you have associated with that data. Our Privacy Policy for\n            TabledIn is created with the help of the{\" \"}\n            <a href=\"https://www.freeprivacypolicy.com/free-privacy-policy-generator.php\">\n              Free Privacy Policy Generator\n            </a>\n            .\n          </p>\n\n          <p>\n            We use your data to provide and improve the Service. By using the\n            Service, you agree to the collection and use of information in\n            accordance with this policy. Unless otherwise defined in this\n            Privacy Policy, terms used in this Privacy Policy have the same\n            meanings as in our Terms and Conditions, accessible from\n            https://tabledin.herokuapp.com/\n          </p>\n\n          <h3>Information Collection And Use</h3>\n\n          <p>\n            We collect several different types of information for various\n            purposes to provide and improve our Service to you.\n          </p>\n\n          <h4>Types of Data Collected</h4>\n\n          <h5>Personal Data</h5>\n\n          <p>\n            While using our Service, we may ask you to provide us with certain\n            personally identifiable information that can be used to contact or\n            identify you (\"Personal Data\"). Personally identifiable information\n            may include, but is not limited to:\n          </p>\n\n          <ul>\n            <li>First name and last name</li>\n            <li>Cookies and Usage Data</li>\n          </ul>\n\n          <h5>Usage Data</h5>\n\n          <p>\n            We may also collect information how the Service is accessed and used\n            (\"Usage Data\"). This Usage Data may include information such as your\n            computer's Internet Protocol address (e.g. IP address), browser\n            type, browser version, the pages of our Service that you visit, the\n            time and date of your visit, the time spent on those pages, unique\n            device identifiers and other diagnostic data.\n          </p>\n\n          <h5>Tracking & Cookies Data</h5>\n          <p>\n            We use cookies and similar tracking technologies to track the\n            activity on our Service and hold certain information.\n          </p>\n          <p>\n            Cookies are files with small amount of data which may include an\n            anonymous unique identifier. Cookies are sent to your browser from a\n            website and stored on your device. Tracking technologies also used\n            are beacons, tags, and scripts to collect and track information and\n            to improve and analyze our Service.\n          </p>\n          <p>\n            You can instruct your browser to refuse all cookies or to indicate\n            when a cookie is being sent. However, if you do not accept cookies,\n            you may not be able to use some portions of our Service.\n          </p>\n          <p>Examples of Cookies we use:</p>\n          <ul>\n            <li>\n              <strong>Session Cookies.</strong> We use Session Cookies to\n              operate our Service.\n            </li>\n            <li>\n              <strong>Preference Cookies.</strong> We use Preference Cookies to\n              remember your preferences and various settings.\n            </li>\n            <li>\n              <strong>Security Cookies.</strong> We use Security Cookies for\n              security purposes.\n            </li>\n          </ul>\n\n          <h3>Use of Data</h3>\n\n          <p>TabledIn uses the collected data for various purposes:</p>\n          <ul>\n            <li>To provide and maintain the Service</li>\n            <li>To notify you about changes to our Service</li>\n            <li>\n              To allow you to participate in interactive features of our Service\n              when you choose to do so\n            </li>\n            <li>To provide customer care and support</li>\n            <li>\n              To provide analysis or valuable information so that we can improve\n              the Service\n            </li>\n            <li>To monitor the usage of the Service</li>\n            <li>To detect, prevent and address technical issues</li>\n          </ul>\n\n          <h3>Transfer Of Data</h3>\n          <p>\n            Your information, including Personal Data, may be transferred to —\n            and maintained on — computers located outside of your state,\n            province, country or other governmental jurisdiction where the data\n            protection laws may differ than those from your jurisdiction.\n          </p>\n          <p>\n            If you are located outside Germany and choose to provide information\n            to us, please note that we transfer the data, including Personal\n            Data, to Germany and process it there.\n          </p>\n          <p>\n            Your consent to this Privacy Policy followed by your submission of\n            such information represents your agreement to that transfer.\n          </p>\n          <p>\n            TabledIn will take all steps reasonably necessary to ensure that\n            your data is treated securely and in accordance with this Privacy\n            Policy and no transfer of your Personal Data will take place to an\n            organization or a country unless there are adequate controls in\n            place including the security of your data and other personal\n            information.\n          </p>\n\n          <h3>Disclosure Of Data</h3>\n\n          <h4>Legal Requirements</h4>\n          <p>\n            TabledIn may disclose your Personal Data in the good faith belief\n            that such action is necessary to:\n          </p>\n          <ul>\n            <li>To comply with a legal obligation</li>\n            <li>To protect and defend the rights or property of TabledIn</li>\n            <li>\n              To prevent or investigate possible wrongdoing in connection with\n              the Service\n            </li>\n            <li>\n              To protect the personal safety of users of the Service or the\n              public\n            </li>\n            <li>To protect against legal liability</li>\n          </ul>\n\n          <h3>Security Of Data</h3>\n          <p>\n            The security of your data is important to us, but remember that no\n            method of transmission over the Internet, or method of electronic\n            storage is 100% secure. While we strive to use commercially\n            acceptable means to protect your Personal Data, we cannot guarantee\n            its absolute security.\n          </p>\n\n          <h3>Service Providers</h3>\n          <p>\n            We may employ third party companies and individuals to facilitate\n            our Service (\"Service Providers\"), to provide the Service on our\n            behalf, to perform Service-related services or to assist us in\n            analyzing how our Service is used.\n          </p>\n          <p>\n            These third parties have access to your Personal Data only to\n            perform these tasks on our behalf and are obligated not to disclose\n            or use it for any other purpose.\n          </p>\n\n          <h3>Links To Other Sites</h3>\n          <p>\n            Our Service may contain links to other sites that are not operated\n            by us. If you click on a third party link, you will be directed to\n            that third party's site. We strongly advise you to review the\n            Privacy Policy of every site you visit.\n          </p>\n          <p>\n            We have no control over and assume no responsibility for the\n            content, privacy policies or practices of any third party sites or\n            services.\n          </p>\n\n          <h3>Children's Privacy</h3>\n          <p>\n            Our Service does not address anyone under the age of 18\n            (\"Children\").\n          </p>\n          <p>\n            We do not knowingly collect personally identifiable information from\n            anyone under the age of 18. If you are a parent or guardian and you\n            are aware that your Children has provided us with Personal Data,\n            please contact us. If we become aware that we have collected\n            Personal Data from children without verification of parental\n            consent, we take steps to remove that information from our servers.\n          </p>\n\n          <h3>Changes To This Privacy Policy</h3>\n          <p>\n            We may update our Privacy Policy from time to time. We will notify\n            you of any changes by posting the new Privacy Policy on this page.\n          </p>\n          <p>\n            We will let you know via email and/or a prominent notice on our\n            Service, prior to the change becoming effective and update the\n            \"effective date\" at the top of this Privacy Policy.\n          </p>\n          <p>\n            You are advised to review this Privacy Policy periodically for any\n            changes. Changes to this Privacy Policy are effective when they are\n            posted on this page.\n          </p>\n\n          <h3>Contact Us</h3>\n          <p>\n            If you have any questions about this Privacy Policy, please contact\n            us:\n          </p>\n          <ul>\n            <li>By email: markomilovanov@gmail.com</li>\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Toolbar from \"./components/Toolbar\";\nimport SideDrawer from \"./components/SideDrawer\";\nimport Backdrop from \"./components/Backdrop\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport RestaurantForm from \"./components/RestaurantForm\";\nimport ShowRestaurant from \"./components/ShowRestaurant\";\nimport EditRestaurant from \"./components/EditRestaurant\";\nimport Bookings from \"./components/Bookings\";\nimport BookingForm from \"./components/BookingForm\";\nimport Planner from \"./components/Planner\";\nimport EditPlanner from \"./components/EditPlanner\";\nimport About from \"./components/About\";\nimport Privacy from \"./components/Privacy\";\nimport axios from \"axios\";\n\nimport \"./scss/App.scss\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    sideDrawerOpen: false,\n    selectedDay: undefined\n  };\n\n  changeDate = data => {\n    this.setState({\n      selectedDay: data\n    });\n  };\n\n  editSchedule = props => {\n    // console.log(this.state.selectedDay)\n    axios\n      .delete(\"/api/planner\", { data: { selectedDay: this.state.selectedDay } })\n      .then(res => {\n        // console.log('fired' res)\n        props.history.push(\"/planner/edit\");\n        // this.props.history.push(\"/planner/edit\");\n        //<Redirect to=\"/planner/edit\" />;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //set date to undefined\n  onChange = () => {\n    this.setState({\n      selectedDay: undefined\n    });\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState(prevState => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen };\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  render() {\n    let backdrop;\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />;\n    }\n\n    return (\n      <div className=\"App\" style={{ height: \"100%\" }}>\n        <Toolbar\n          drawerClickHandler={this.drawerToggleClickHandler}\n          user={this.state.user}\n          setUser={this.setUser}\n        />\n        <SideDrawer\n          click={this.backdropClickHandler}\n          show={this.state.sideDrawerOpen}\n          user={this.state.user}\n          setUser={this.setUser}\n        />\n        {backdrop}\n\n        <main>\n          <Switch>\n          <Route\n              exact\n              path=\"/privacy\"\n              render={props => <Privacy setUser={this.setUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/about\"\n              render={props => <About setUser={this.setUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={props => (\n                //spread props object so that all properties of props are passed on\n                <Signup setUser={this.setUser} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props => <Login setUser={this.setUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/restaurant/new\"\n              render={props => {\n                if (this.state.user) return <RestaurantForm {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={props => {\n                if (this.state.user) return <Bookings {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/booking/add\"\n              render={props => {\n                if (this.state.user) return <BookingForm {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/restaurant/edit\"\n              render={props => {\n                if (this.state.user) return <EditRestaurant {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/restaurant/show\"\n              render={props => {\n                if (this.state.user) return <ShowRestaurant {...props} />;\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/planner\"\n              render={props => {\n                if (this.state.user)\n                  return (\n                    <Planner\n                      {...props}\n                      changeDate={this.changeDate}\n                      selectedDay={this.state.selectedDay}\n                      editSchedule={this.editSchedule}\n                    />\n                  );\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/planner/edit\"\n              render={props => {\n                if (this.state.user)\n                  return (\n                    <EditPlanner\n                      {...props}\n                      changeDate={this.changeDate}\n                      selectedDay={this.state.selectedDay}\n                      editSchedule={this.editSchedule}\n                      onDateChange={this.onChange}\n                    />\n                  );\n                else return <Redirect to=\"/login\" />;\n              }}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}